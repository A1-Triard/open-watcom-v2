# Pipeline
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

schedules:
- cron: "10 1 * * *"
  displayName: "Daily midnight build"
  branches:
    include:
    - master

resources:
  repositories:
  - repository: wikidocsgit
    type: GitHub
    name: open-watcom/open-watcom-v2-webdocs
    endpoint: open-watcom-v2-wikidocs

variables: 
  owroot:           $(Build.SourcesDirectory)
  owobjdir:         binbuild
  owgitverbose:     -v

  owimage_lnx:      'ubuntu-latest'
  owimage_nt:       'vs2017-win2016'
  owimage_osx:      'macOS-latest'
  owtools_lnx:      GCC
  owtools_nt:       VISUALC
  owtools_osx:      CLANG
  owscript_lnx:     ci/buildx.sh
  owscript_nt:      ci\buildx.cmd
  owscript_osx:     ci/buildx.sh
  owartifactfile:   owartifact.tar.gz
  owartifactfile7z: owartifact.tar
  owcibin:          $(owroot)\ci\bin64

stages:
  - stage: start
    displayName: "Start"
    jobs:
      - job: start
        steps:
        - checkout: none
  - stage: bootosx
    displayName: "Bootstrap OSX"
    dependsOn:
      - start
    jobs:
      - template: ci/boot.yml
        parameters:
          arch:     osx
          title:    Bootstrap OSX
  - stage: buildosx
    displayName: "Build OSX"
    dependsOn:
      - bootosx
    jobs:
      - template: ci/build.yml
        parameters:
          arch:     osx
          title:    Build OSX
  - stage: bootlnx
    displayName: "Bootstrap Linux"
    dependsOn:
      - start
    jobs:
      - template: ci/boot.yml
        parameters:
          arch:     lnx
          title:    Bootstrap Linux
  - stage: buildlnx
    displayName: "Build Linux"
    dependsOn:
      - bootlnx
    jobs:
      - template: ci/build.yml
        parameters:
          arch:     lnx
          title:    Build Linux
  - stage: testslnx
    displayName: "Tests Linux"
    dependsOn:
      - buildlnx
    jobs:
      - template: ci/tests.yml
        parameters:
          arch:     lnx
          title:    Tests Linux
  - stage: installnx
    displayName: "Installers Build Linux"
    dependsOn:
      - testslnx
      - testsnt
      - docsnt
    condition: >
      and(
        succeeded(), 
        in( variables['Build.Reason'], 'Schedule', 'Manual' )
      )
    jobs:
      - template: ci/install.yml
        parameters:
          arch:     lnx
          title:    Installers Build Linux
  - stage: release
    displayName: "GitHub Release"
    dependsOn:
      - installnx
      - instalnt
    condition: >
      and(
        succeeded(), 
        in( variables['Build.Reason'], 'Schedule', 'Manual' )
      )
    jobs:
      - template: ci/release.yml
        parameters:
          arch:     lnx
          title:    GitHub Release
  - stage: bootnt
    displayName: "Bootstrap Windows"
    dependsOn:
      - start
    jobs:
      - template: ci/boot.yml
        parameters:
          arch:     nt
          title:    Bootstrap Windows
  - stage: buildnt
    displayName: "Build Windows"
    dependsOn:
      - bootnt
    jobs:
      - template: ci/build.yml
        parameters:
          arch:     nt
          title:    Build Windows
  - stage: testsnt
    displayName: "Tests Windows"
    dependsOn:
      - buildnt
    jobs:
      - template: ci/tests.yml
        parameters:
          arch:     nt
          title:    Tests Windows
  - stage: docsnt
    displayName: "Docs Build Windows"
    dependsOn:
      - bootnt
    jobs:
      - template: ci/docs.yml
        parameters:
          arch:     nt
          title:    Documentation Build DOS
          doctype:  docdos
      - template: ci/docs.yml
        parameters:
          arch:     nt
          title:    Documentation Build Html
          doctype:  dochtml
      - template: ci/docs.yml
        parameters:
          arch:     nt
          title:    Documentation Build NT
          doctype:  docnt
      - template: ci/docs.yml
        parameters:
          arch:     nt
          title:    Documentation Build OS2
          doctype:  docos2
      - template: ci/docs.yml
        parameters:
          arch:     nt
          title:    Documentation Build PDF
          doctype:  docpdf
      - template: ci/docs.yml
        parameters:
          arch:     nt
          title:    Documentation Build WIN
          doctype:  docwin
  - stage: instalnt
    displayName: "Installers Build Windows"
    dependsOn:
      - testsnt
      - testslnx
      - docsnt
    condition: >
      and(
        succeeded(), 
        in( variables['Build.Reason'], 'Schedule', 'Manual' )
      )
    jobs:
      - template: ci/install.yml
        parameters:
          arch:     nt
          title:    Installers Build Windows
  - stage: scanlnx
    displayName: "Coverity Scan Linux"
    dependsOn:
      - buildlnx
    condition: >
      and(
        succeeded(), 
        in( variables['Build.Reason'], 'Schedule', 'Manual') 
      )
    jobs:
      - template: ci/coverity.yml
        parameters:
          arch:     lnx
          title:    Coverity Scan Linux
      #- template: ci/coverity.yml
      #  parameters:
      #    arch:     nt
      #    title:    Coverity Scan Windows
  - stage: wikibldnt
    displayName: "Wiki Docs Build"
    dependsOn:
      - bootnt
    jobs:
      - template: ci/wikibld.yml
        parameters:
          arch:     nt
          title:    Wiki Html Documentation Build
          doctype:  dochtml
      - template: ci/wikibld.yml
        parameters:
          arch:     nt
          title:    Wiki PDF Documentation Build
          doctype:  docpdf
  - stage: wikiupdnt
    displayName: "Wiki Docs Update"
    dependsOn:
      - wikibldnt
    jobs:
      - template: ci/wikiupd.yml
        parameters:
          arch:     nt
          title:    Wiki Documentation Update
  - stage: mirror
    displayName: "Mirror OW repository"
    dependsOn:
      - start
    condition: >
      and(
        succeeded(), 
        in( variables['Build.Reason'], 'IndividualCI', 'BatchedCI', 'Manual' )
      )
    jobs:
      - template: ci/mirror.yml
        parameters:
          arch:     lnx
          title:    Mirror to SF

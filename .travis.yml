language: c

addons:
  apt:
    packages:
      # install DOS Emulator
      - dosemu
      # install Ghostscript
      - ghostscript

cache:
  ccache: true
  directories:
    - ${HOME}/mycache

before_script:
 # initialize OW build environment variables
 - . travis/setowrel.sh
 - export OWROOT=$TRAVIS_BUILD_DIR
 - export OWOBJDIR=binbuild
 - export OWDOCBUILD=0
 - export OWDOCQUIET=1
 - export USE_FILENAME_VERSION=1
 - . ./cmnvars.sh
 # get clone of GitHub repository to return Travis CI OW build/log files
 # and compress GitHub repository if necessary to hold only a few last builds
 - travis/gitget.sh
 - env | sed -n -e '/^TRAVIS/p' -e '/^OW/p' | sort

#script:
# - build.sh rel

after_failure:
 # after failure transfer log files back to GitHub repository
 - travis/gitupdf.sh

after_success:
 # after success transfer OW build to GitHub repository
 - travis/gitupds.sh

jobs:
  include:
    - stage: Bootstrap Linux
      os: linux
      compiler: clang
      sudo: required
      env:
        - OWTRAVISJOB=BOOTLINUX
        - OWTOOLS=CLANG
        - OWDOCBUILD=0
        - OWVERBOSE=1
      install:
        # initialize OW build tools
        - travis/initools.sh
      script: travis/build.sh boot
      before_cache:
        # upload OW build tools
        - travis/savtools.sh
    - stage: Build Linux
      os: linux
      compiler: clang
      sudo: required
      env:
        - OWTRAVISJOB=BUILDLINUX
        - OWTOOLS=CLANG
        - OWDOCBUILD=0
        - OWVERBOSE=0
        - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then export BUILDER_OPT=-q; fi
      install:
        # download OW build tools
        - travis/rsttools.sh
      script: travis/build.sh rel
    - stage: Build PDF documentation
      os: linux
      compiler: clang
      sudo: required
      env:
        - OWTRAVISJOB=PDFDOCLINUX
        - OWTOOLS=CLANG
        - OWDOCBUILD=1
        - OWVERBOSE=0
        - OWGHOSTSCRIPTPATH=$PATH
      install:
        # download OW build tools
        - travis/rsttools.sh
      script: travis/build.sh docpdf
    - stage: Bootstrap OSX
      os: osx
      compiler: clang
      env:
        - OWTRAVISJOB=BOOTOSX
        - OWTOOLS=CLANG
        - OWDOCBUILD=0
        - OWVERBOSE=1
        # initialize OW build tools
        - travis/initools.sh
      script: travis/build.sh boot
      before_cache:
        # upload OW build tools
        - travis/savtools.sh
#    - stage: Build OSX
#      os: osx
#      compiler: clang
#      env:
#        - OWTRAVISJOB=BUILDOSX
#        - OWTOOLS=CLANG
#        - OWDOCBUILD=0
#        - OWVERBOSE=0
#        - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then export BUILDER_OPT=-q; fi
#      install:
#        # install DOS Emulator
#        - brew install dosbox
#        - export OWDOSBOX=dosbox
#        # install Ghostscript
#        - brew install ghostscript
#        # download OW build tools
#        - travis/rsttools.sh
#      script: travis/build.sh rel
    - stage: Clear cache
      os: linux
      env: OWTRAVISJOB=CLEARCACHE
      before_script: skip
      script: travis/initools.sh

#addons:
#  coverity_scan:
#    project:
#      name: "open-watcom/open-watcom-v2"
#      description: "Build submitted via Travis CI"

#    notification_email:    malak.jiri@gmail.com
#    build_command_prepend:
#    build_command:         $OWROOT/build.sh
#    branch_pattern:        master

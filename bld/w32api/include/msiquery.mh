/*
 * Microsoft Windows Installer database query declarations
 *
:include crwatcnt.sp
 */

#ifndef _MSIQUERY_H_
#define _MSIQUERY_H_

:include readonly.sp

#include <msi.h>

#define MSI_NULL_INTEGER 0x80000000

#define MSIDBOPEN_READONLY      (LPCTSTR)0
#define MSIDBOPEN_TRANSACT      (LPCTSTR)1
#define MSIDBOPEN_DIRECT        (LPCTSTR)2
#define MSIDBOPEN_CREATE        (LPCTSTR)3
#define MSIDBOPEN_CREATEDIRECT  (LPCTSTR)4
#define MSIDBOPEN_PATCHFILE     (32/sizeof(*MSIDBOPEN_READONLY))

typedef enum tagMSIDBSTATE {
    MSIDBSTATE_ERROR =-1,
    MSIDBSTATE_READ = 0,
    MSIDBSTATE_WRITE = 1
} MSIDBSTATE;

typedef enum tagMSIMODIFY {
    MSIMODIFY_SEEK =-1,
    MSIMODIFY_REFRESH = 0,
    MSIMODIFY_INSERT = 1,
    MSIMODIFY_UPDATE = 2,
    MSIMODIFY_ASSIGN = 3,
    MSIMODIFY_REPLACE = 4,
    MSIMODIFY_MERGE = 5,
    MSIMODIFY_DELETE = 6,
    MSIMODIFY_INSERT_TEMPORARY = 7,
    MSIMODIFY_VALIDATE = 8,
    MSIMODIFY_VALIDATE_NEW = 9,
    MSIMODIFY_VALIDATE_FIELD = 10,
    MSIMODIFY_VALIDATE_DELETE = 11
} MSIMODIFY;

typedef enum tagMSICOLINFO {
    MSICOLINFO_NAMES = 0,
    MSICOLINFO_TYPES = 1
} MSICOLINFO;

typedef enum tagMSICONDITION {
    MSICONDITION_FALSE = 0,
    MSICONDITION_TRUE = 1,
    MSICONDITION_NONE = 2,
    MSICONDITION_ERROR = 3
} MSICONDITION;

typedef enum tagMSICOSTTREE {
    MSICOSTTREE_SELFONLY = 0,
    MSICOSTTREE_CHILDREN = 1,
    MSICOSTTREE_PARENTS = 2,
    MSICOSTTREE_RESERVED = 3
} MSICOSTTREE;

typedef enum tagMSIDBERROR {
    MSIDBERROR_INVALIDARG = -3,
    MSIDBERROR_MOREDATA = -2,
    MSIDBERROR_FUNCTIONERROR = -1,
    MSIDBERROR_NOERROR = 0,
    MSIDBERROR_DUPLICATEKEY = 1,
    MSIDBERROR_REQUIRED = 2,
    MSIDBERROR_BADLINK = 3,
    MSIDBERROR_OVERFLOW = 4,
    MSIDBERROR_UNDERFLOW = 5,
    MSIDBERROR_NOTINSET = 6,
    MSIDBERROR_BADVERSION = 7,
    MSIDBERROR_BADCASE = 8,
    MSIDBERROR_BADGUID = 9,
    MSIDBERROR_BADWILDCARD = 10,
    MSIDBERROR_BADIDENTIFIER = 11,
    MSIDBERROR_BADLANGUAGE = 12,
    MSIDBERROR_BADFILENAME = 13,
    MSIDBERROR_BADPATH = 14,
    MSIDBERROR_BADCONDITION = 15,
    MSIDBERROR_BADFORMATTED = 16,
    MSIDBERROR_BADTEMPLATE = 17,
    MSIDBERROR_BADDEFAULTDIR = 18,
    MSIDBERROR_BADREGPATH = 19,
    MSIDBERROR_BADCUSTOMSOURCE = 20,
    MSIDBERROR_BADPROPERTY = 21,
    MSIDBERROR_MISSINGDATA = 22,
    MSIDBERROR_BADCATEGORY = 23,
    MSIDBERROR_BADKEYTABLE = 24,
    MSIDBERROR_BADMAXMINVALUES = 25,
    MSIDBERROR_BADCABINET = 26,
    MSIDBERROR_BADSHORTCUT = 27,
    MSIDBERROR_STRINGOVERFLOW = 28,
    MSIDBERROR_BADLOCALIZEATTRIB = 29
} MSIDBERROR;

typedef enum tagMSIRUNMODE {
    MSIRUNMODE_ADMIN = 0,
    MSIRUNMODE_ADVERTISE = 1,
    MSIRUNMODE_MAINTENANCE = 2,
    MSIRUNMODE_ROLLBACKENABLED = 3,
    MSIRUNMODE_LOGENABLED = 4,
    MSIRUNMODE_OPERATIONS = 5,
    MSIRUNMODE_REBOOTATEND = 6,
    MSIRUNMODE_REBOOTNOW = 7,
    MSIRUNMODE_CABINET = 8,
    MSIRUNMODE_SOURCESHORTNAMES = 9,
    MSIRUNMODE_TARGETSHORTNAMES = 10,
    MSIRUNMODE_WINDOWS9X = 12,
    MSIRUNMODE_ZAWENABLED = 13,
    MSIRUNMODE_SCHEDULED = 16,
    MSIRUNMODE_ROLLBACK = 17,
    MSIRUNMODE_COMMIT = 18
} MSIRUNMODE;

#define INSTALLMESSAGE_TYPEMASK 0xFF000000L

typedef enum tagMSITRANSFORM_ERROR {
    MSITRANSFORM_ERROR_ADDEXISTINGROW = 0x00000001,
    MSITRANSFORM_ERROR_DELMISSINGROW = 0x00000002,
    MSITRANSFORM_ERROR_ADDEXISTINGTABLE = 0x00000004,
    MSITRANSFORM_ERROR_DELMISSINGTABLE = 0x00000008,
    MSITRANSFORM_ERROR_UPDATEMISSINGROW = 0x00000010,
    MSITRANSFORM_ERROR_CHANGECODEPAGE = 0x00000020,
    MSITRANSFORM_ERROR_VIEWTRANSFORM = 0x00000100
} MSITRANSFORM_ERROR;

typedef enum tagMSITRANSFORM_VALIDATE {
    MSITRANSFORM_VALIDATE_LANGUAGE = 0x00000001,
    MSITRANSFORM_VALIDATE_PRODUCT = 0x00000002,
    MSITRANSFORM_VALIDATE_PLATFORM = 0x00000004,
    MSITRANSFORM_VALIDATE_MAJORVERSION = 0x00000008,
    MSITRANSFORM_VALIDATE_MINORVERSION = 0x00000010,
    MSITRANSFORM_VALIDATE_UPDATEVERSION = 0x00000020,
    MSITRANSFORM_VALIDATE_NEWLESSBASEVERSION = 0x00000040,
    MSITRANSFORM_VALIDATE_NEWLESSEQUALBASEVERSION = 0x00000080,
    MSITRANSFORM_VALIDATE_NEWEQUALBASEVERSION = 0x00000100,
    MSITRANSFORM_VALIDATE_NEWGREATEREQUALBASEVERSION = 0x00000200,
    MSITRANSFORM_VALIDATE_NEWGREATERBASEVERSION = 0x00000400,
    MSITRANSFORM_VALIDATE_UPGRADECODE = 0x00000800
} MSITRANSFORM_VALIDATE;

:include cpluspro.sp

  LWSTDAPI_( UINT )                 MsiDatabaseOpenViewA(MSIHANDLE, LPCSTR, MSIHANDLE *);
  LWSTDAPI_( UINT )                 MsiDatabaseOpenViewW(MSIHANDLE, LPCWSTR, MSIHANDLE *);
  LWSTDAPI_( MSIDBERROR )           MsiViewGetErrorA(MSIHANDLE, LPSTR, DWORD *);
  LWSTDAPI_( MSIDBERROR )           MsiViewGetErrorW(MSIHANDLE, LPWSTR, DWORD *);
  LWSTDAPI_( UINT )                 MsiViewExecute(MSIHANDLE, MSIHANDLE);
  LWSTDAPI_( UINT )                 MsiViewFetch(MSIHANDLE, MSIHANDLE *);
  LWSTDAPI_( UINT )                 MsiViewModify(MSIHANDLE, MSIMODIFY, MSIHANDLE);
  LWSTDAPI_( UINT )                 MsiViewGetColumnInfo(MSIHANDLE, MSICOLINFO, MSIHANDLE *);
  LWSTDAPI_( UINT )                 MsiViewClose(MSIHANDLE);
  LWSTDAPI_( UINT )                 MsiDatabaseGetPrimaryKeysA(MSIHANDLE, LPCSTR, MSIHANDLE *);
  LWSTDAPI_( UINT )                 MsiDatabaseGetPrimaryKeysW(MSIHANDLE, LPCWSTR, MSIHANDLE *);
  LWSTDAPI_( MSICONDITION )         MsiDatabaseIsTablePersistentA(MSIHANDLE, LPCSTR);
  LWSTDAPI_( MSICONDITION )         MsiDatabaseIsTablePersistentW(MSIHANDLE, LPCWSTR);
  LWSTDAPI_( UINT )                 MsiGetSummaryInformationA(MSIHANDLE, LPCSTR, UINT, MSIHANDLE *);
  LWSTDAPI_( UINT )                 MsiGetSummaryInformationW(MSIHANDLE, LPCWSTR, UINT, MSIHANDLE *);
  LWSTDAPI_( UINT )                 MsiSummaryInfoGetPropertyCount(MSIHANDLE, UINT *);
  LWSTDAPI_( UINT )                 MsiSummaryInfoSetPropertyA(MSIHANDLE, UINT, UINT, INT, FILETIME *, LPCSTR);
  LWSTDAPI_( UINT )                 MsiSummaryInfoSetPropertyW(MSIHANDLE, UINT, UINT, INT, FILETIME *, LPCWSTR);
  LWSTDAPI_( UINT )                 MsiSummaryInfoGetPropertyA(MSIHANDLE, UINT, UINT *, INT *, FILETIME *, LPSTR, DWORD *);
  LWSTDAPI_( UINT )                 MsiSummaryInfoGetPropertyW(MSIHANDLE, UINT, UINT *, INT *, FILETIME *, LPWSTR, DWORD *);
  LWSTDAPI_( UINT )                 MsiSummaryInfoPersist(MSIHANDLE);
  LWSTDAPI_( UINT )                 MsiOpenDatabaseA(LPCSTR, LPCSTR, MSIHANDLE *);
  LWSTDAPI_( UINT )                 MsiOpenDatabaseW(LPCWSTR, LPCWSTR, MSIHANDLE *);
  LWSTDAPI_( UINT )                 MsiDatabaseImportA(MSIHANDLE, LPCSTR, LPCSTR);
  LWSTDAPI_( UINT )                 MsiDatabaseImportW(MSIHANDLE, LPCWSTR, LPCWSTR);
  LWSTDAPI_( UINT )                 MsiDatabaseExportA(MSIHANDLE, LPCSTR, LPCSTR, LPCSTR);
  LWSTDAPI_( UINT )                 MsiDatabaseExportW(MSIHANDLE, LPCWSTR, LPCWSTR, LPCWSTR);
  LWSTDAPI_( UINT )                 MsiDatabaseMergeA(MSIHANDLE, MSIHANDLE, LPCSTR);
  LWSTDAPI_( UINT )                 MsiDatabaseMergeW(MSIHANDLE, MSIHANDLE, LPCWSTR);
  LWSTDAPI_( UINT )                 MsiDatabaseGenerateTransformA(MSIHANDLE, MSIHANDLE, LPCSTR, int, int);
  LWSTDAPI_( UINT )                 MsiDatabaseGenerateTransformW(MSIHANDLE, MSIHANDLE, LPCWSTR, int, int);
  LWSTDAPI_( UINT )                 MsiDatabaseApplyTransformA(MSIHANDLE, LPCSTR, int);
  LWSTDAPI_( UINT )                 MsiDatabaseApplyTransformW(MSIHANDLE, LPCWSTR, int);
  LWSTDAPI_( UINT )                 MsiCreateTransformSummaryInfoA(MSIHANDLE, MSIHANDLE, LPCSTR, int, int);
  LWSTDAPI_( UINT )                 MsiCreateTransformSummaryInfoW(MSIHANDLE, MSIHANDLE, LPCWSTR, int, int);
  LWSTDAPI_( UINT )                 MsiDatabaseCommit(MSIHANDLE);
  LWSTDAPI_( MSIDBSTATE )           MsiGetDatabaseState(MSIHANDLE);
  LWSTDAPI_( MSIHANDLE )            MsiCreateRecord(UINT);
  LWSTDAPI_( BOOL )                 MsiRecordIsNull(MSIHANDLE, UINT);
  LWSTDAPI_( UINT )                 MsiRecordDataSize(MSIHANDLE, UINT);
  LWSTDAPI_( UINT )                 MsiRecordSetInteger(MSIHANDLE, UINT, int);
  LWSTDAPI_( int )                  MsiRecordGetInteger(MSIHANDLE, UINT);
  LWSTDAPI_( UINT )                 MsiRecordGetFieldCount(MSIHANDLE);
  LWSTDAPI_( UINT )                 MsiRecordReadStream(MSIHANDLE, UINT, char *, DWORD *);
  LWSTDAPI_( UINT )                 MsiRecordClearData(MSIHANDLE);
  LWSTDAPI_( MSIHANDLE )            MsiGetActiveDatabase(MSIHANDLE);
  LWSTDAPI_( LANGID )               MsiGetLanguage(MSIHANDLE);
  LWSTDAPI_( BOOL )                 MsiGetMode(MSIHANDLE, MSIRUNMODE);
  LWSTDAPI_( UINT )                 MsiSetMode(MSIHANDLE, MSIRUNMODE, BOOL);
  LWSTDAPI_( int )                  MsiProcessMessage(MSIHANDLE, INSTALLMESSAGE, MSIHANDLE);
  LWSTDAPI_( UINT )                 MsiRecordSetStringA(MSIHANDLE, UINT, LPCSTR);
  LWSTDAPI_( UINT )                 MsiRecordSetStringW(MSIHANDLE, UINT, LPCWSTR);
  LWSTDAPI_( UINT )                 MsiRecordGetStringA(MSIHANDLE, UINT, LPSTR, DWORD *);
  LWSTDAPI_( UINT )                 MsiRecordGetStringW(MSIHANDLE, UINT, LPWSTR, DWORD *);
  LWSTDAPI_( UINT )                 MsiRecordSetStreamA(MSIHANDLE, UINT, LPCSTR);
  LWSTDAPI_( UINT )                 MsiRecordSetStreamW(MSIHANDLE, UINT, LPCWSTR);
  LWSTDAPI_( UINT )                 MsiSetPropertyA(MSIHANDLE, LPCSTR, LPCSTR);
  LWSTDAPI_( UINT )                 MsiSetPropertyW(MSIHANDLE, LPCWSTR, LPCWSTR);
  LWSTDAPI_( UINT )                 MsiGetPropertyA(MSIHANDLE, LPCSTR, LPSTR, DWORD *);
  LWSTDAPI_( UINT )                 MsiGetPropertyW(MSIHANDLE, LPCWSTR, LPWSTR, DWORD *);
  LWSTDAPI_( UINT )                 MsiFormatRecordA(MSIHANDLE, MSIHANDLE, LPSTR, DWORD *);
  LWSTDAPI_( UINT )                 MsiFormatRecordW(MSIHANDLE, MSIHANDLE, LPWSTR, DWORD *);
  LWSTDAPI_( UINT )                 MsiDoActionA(MSIHANDLE, LPCSTR);
  LWSTDAPI_( UINT )                 MsiDoActionW(MSIHANDLE, LPCWSTR);
  LWSTDAPI_( UINT )                 MsiSequenceA(MSIHANDLE, LPCSTR, INT);
  LWSTDAPI_( UINT )                 MsiSequenceW(MSIHANDLE, LPCWSTR, INT);
  LWSTDAPI_( MSICONDITION )         MsiEvaluateConditionA(MSIHANDLE, LPCSTR);
  LWSTDAPI_( MSICONDITION )         MsiEvaluateConditionW(MSIHANDLE, LPCWSTR);
  LWSTDAPI_( UINT )                 MsiGetFeatureStateA(MSIHANDLE, LPCSTR, INSTALLSTATE *, INSTALLSTATE *);
  LWSTDAPI_( UINT )                 MsiGetFeatureStateW(MSIHANDLE, LPCWSTR, INSTALLSTATE *, INSTALLSTATE *);
  LWSTDAPI_( UINT )                 MsiSetFeatureStateA(MSIHANDLE, LPCSTR, INSTALLSTATE);
  LWSTDAPI_( UINT )                 MsiSetFeatureStateW(MSIHANDLE, LPCWSTR, INSTALLSTATE);
  LWSTDAPI_( UINT )                 MsiGetComponentStateA(MSIHANDLE, LPCSTR, INSTALLSTATE *, INSTALLSTATE *);
  LWSTDAPI_( UINT )                 MsiGetComponentStateW(MSIHANDLE, LPCWSTR, INSTALLSTATE *, INSTALLSTATE *);
  LWSTDAPI_( UINT )                 MsiSetComponentStateA(MSIHANDLE, LPCSTR, INSTALLSTATE);
  LWSTDAPI_( UINT )                 MsiSetComponentStateW(MSIHANDLE, LPCWSTR, INSTALLSTATE);
  LWSTDAPI_( UINT )                 MsiGetFeatureCostA(MSIHANDLE, LPCSTR, MSICOSTTREE, INSTALLSTATE, INT *);
  LWSTDAPI_( UINT )                 MsiGetFeatureCostW(MSIHANDLE, LPCWSTR, MSICOSTTREE, INSTALLSTATE, INT *);
  LWSTDAPI_( UINT )                 MsiSetInstallLevel(MSIHANDLE, int);
  LWSTDAPI_( UINT )                 MsiVerifyDiskSpace(MSIHANDLE);
  LWSTDAPI_( UINT )                 MsiEnableUIPreview(MSIHANDLE, MSIHANDLE *);
  LWSTDAPI_( MSIHANDLE )            MsiGetLastErrorRecord();
  LWSTDAPI_( UINT )                 MsiGetFeatureValidStatesA(MSIHANDLE, LPCSTR, DWORD *);
  LWSTDAPI_( UINT )                 MsiGetFeatureValidStatesW(MSIHANDLE, LPCWSTR, DWORD *);
  LWSTDAPI_( UINT )                 MsiGetSourcePathA(MSIHANDLE, LPCSTR, LPSTR, DWORD *);
  LWSTDAPI_( UINT )                 MsiGetSourcePathW(MSIHANDLE, LPCWSTR, LPWSTR, DWORD *);
  LWSTDAPI_( UINT )                 MsiGetTargetPathA(MSIHANDLE, LPCSTR, LPSTR, DWORD *);
  LWSTDAPI_( UINT )                 MsiGetTargetPathW(MSIHANDLE, LPCWSTR, LPWSTR, DWORD *);
  LWSTDAPI_( UINT )                 MsiSetTargetPathA(MSIHANDLE, LPCSTR, LPCSTR);
  LWSTDAPI_( UINT )                 MsiSetTargetPathW(MSIHANDLE, LPCWSTR, LPCWSTR);
  LWSTDAPI_( UINT )                 MsiPreviewDialogA(MSIHANDLE, LPCSTR);
  LWSTDAPI_( UINT )                 MsiPreviewDialogW(MSIHANDLE, LPCWSTR);
  LWSTDAPI_( UINT )                 MsiPreviewBillboardA(MSIHANDLE, LPCSTR, LPCSTR);
  LWSTDAPI_( UINT )                 MsiPreviewBillboardW(MSIHANDLE, LPCWSTR, LPCWSTR);

#if (_WIN32_MSI >= 110)
  LWSTDAPI_( UINT )                 MsiSetFeatureAttributesA(MSIHANDLE, LPCSTR, DWORD);
  LWSTDAPI_( UINT )                 MsiSetFeatureAttributesW(MSIHANDLE, LPCWSTR, DWORD);
#endif

#if (_WIN32_MSI >= 150)
  LWSTDAPI_( UINT )                 MsiEnumComponentCostsA(MSIHANDLE, LPCSTR, DWORD, INSTALLSTATE, LPSTR, DWORD *, INT *, INT *);
  LWSTDAPI_( UINT )                 MsiEnumComponentCostsW(MSIHANDLE, LPCWSTR, DWORD, INSTALLSTATE, LPWSTR, DWORD *, INT *, INT *);
#endif

#ifdef UNICODE
    #define MsiDatabaseOpenView MsiDatabaseOpenViewW
    #define MsiViewGetError MsiViewGetErrorW
    #define MsiDatabaseGetPrimaryKeys MsiDatabaseGetPrimaryKeysW
    #define MsiDatabaseIsTablePersistent MsiDatabaseIsTablePersistentW
    #define MsiGetSummaryInformation MsiGetSummaryInformationW
    #define MsiSummaryInfoSetProperty MsiSummaryInfoSetPropertyW
    #define MsiSummaryInfoGetProperty MsiSummaryInfoGetPropertyW
    #define MsiOpenDatabase MsiOpenDatabaseW
    #define MsiDatabaseImport MsiDatabaseImportW
    #define MsiDatabaseExport MsiDatabaseExportW
    #define MsiDatabaseMerge MsiDatabaseMergeW
    #define MsiDatabaseGenerateTransform MsiDatabaseGenerateTransformW
    #define MsiDatabaseApplyTransform MsiDatabaseApplyTransformW
    #define MsiCreateTransformSummaryInfo MsiCreateTransformSummaryInfoW
    #define MsiRecordSetString MsiRecordSetStringW
    #define MsiRecordGetString MsiRecordGetStringW
    #define MsiRecordSetStream MsiRecordSetStreamW
    #define MsiSetProperty MsiSetPropertyW
    #define MsiGetProperty MsiGetPropertyW
    #define MsiFormatRecord MsiFormatRecordW
    #define MsiDoAction MsiDoActionW
    #define MsiSequence MsiSequenceW
    #define MsiEvaluateCondition MsiEvaluateConditionW
    #define MsiGetFeatureState MsiGetFeatureStateW
    #define MsiSetFeatureState MsiSetFeatureStateW
    #define MsiGetComponentState MsiGetComponentStateW
    #define MsiSetComponentState MsiSetComponentStateW
    #define MsiGetFeatureCost MsiGetFeatureCostW
    #define MsiGetFeatureValidStates MsiGetFeatureValidStatesW
    #define MsiGetSourcePath MsiGetSourcePathW
    #define MsiGetTargetPath MsiGetTargetPathW
    #define MsiSetTargetPath MsiSetTargetPathW
    #define MsiPreviewDialog MsiPreviewDialogW
    #define MsiPreviewBillboard MsiPreviewBillboardW
#if (_WIN32_MSI >= 110)    
    #define MsiSetFeatureAttributes MsiSetFeatureAttributesW
#endif
#if (_WIN32_MSI >= 150)
    #define MsiEnumComponentCosts MsiEnumComponentCostsW
#endif
#else
    #define MsiDatabaseOpenView MsiDatabaseOpenViewA
    #define MsiViewGetError MsiViewGetErrorA
    #define MsiDatabaseGetPrimaryKeys MsiDatabaseGetPrimaryKeysA
    #define MsiDatabaseIsTablePersistent MsiDatabaseIsTablePersistentA
    #define MsiGetSummaryInformation MsiGetSummaryInformationA
    #define MsiSummaryInfoSetProperty MsiSummaryInfoSetPropertyA
    #define MsiSummaryInfoGetProperty MsiSummaryInfoGetPropertyA
    #define MsiOpenDatabase MsiOpenDatabaseA
    #define MsiDatabaseImport MsiDatabaseImportA
    #define MsiDatabaseExport MsiDatabaseExportA
    #define MsiDatabaseMerge MsiDatabaseMergeA
    #define MsiDatabaseGenerateTransform MsiDatabaseGenerateTransformA
    #define MsiDatabaseApplyTransform MsiDatabaseApplyTransformA
    #define MsiCreateTransformSummaryInfo MsiCreateTransformSummaryInfoA
    #define MsiRecordSetString MsiRecordSetStringA
    #define MsiRecordGetString MsiRecordGetStringA
    #define MsiRecordSetStream MsiRecordSetStreamA
    #define MsiSetProperty MsiSetPropertyA
    #define MsiGetProperty MsiGetPropertyA
    #define MsiFormatRecord MsiFormatRecordA
    #define MsiDoAction MsiDoActionA
    #define MsiSequence MsiSequenceA
    #define MsiEvaluateCondition MsiEvaluateConditionA
    #define MsiGetFeatureState MsiGetFeatureStateA
    #define MsiSetFeatureState MsiSetFeatureStateA
    #define MsiGetComponentState MsiGetComponentStateA
    #define MsiSetComponentState MsiSetComponentStateA
    #define MsiGetFeatureCost MsiGetFeatureCostA
    #define MsiGetFeatureValidStates MsiGetFeatureValidStatesA
    #define MsiGetSourcePath MsiGetSourcePathA
    #define MsiGetTargetPath MsiGetTargetPathA
    #define MsiSetTargetPath MsiSetTargetPathA
    #define MsiPreviewDialog MsiPreviewDialogA
    #define MsiPreviewBillboard MsiPreviewBillboardA
#if (_WIN32_MSI >= 110)    
    #define MsiSetFeatureAttributes MsiSetFeatureAttributesA
#endif
#if (_WIN32_MSI >= 150)
    #define MsiEnumComponentCosts MsiEnumComponentCostsA
#endif
#endif /* UNICODE */

:include cplusepi.sp

#endif /* _MSIQUERY_H_ */
proj_name = wasm

!ifndef wasm_autodepends
wasm_autodepends = .AUTODEPEND
!endif

wasm_trmem = 1

#wasm_dos_extender = causeway

fpu_flags_dos_i86 = -fpc
fpu_flags_dos_386 = -fpc
fpu_flags_linux_386 = -fpc
fpu_flags_nt_386 = -fpc
fpu_flags_os2_386 = -fpc
fpu_flags_qnx_386 = -fpc

!include cproj.mif
!include defrule.mif
!include deftarg.mif
!include wres.mif
!include trmem.mif
!include $(wasm_dir)/client.mif

#
# cflags
#
.c : ../c;$(womp_dir)/c;$(trmem_dir);$(watcom_dir)/c

inc_dirs  = -I. -I"../h" -I"$(womp_dir)/h" -I"$(fe_misc_dir)/h"

extra_cpp_flags =-D_STANDALONE_
#extra_cpp_flags += -DINCL_MSGTEXT
!ifeq release 0
extra_cpp_flags += -DDEBUG_OUT
!endif

extra_cpp_flags_genmsomf = -DMSG_WOMP_BASE=200
extra_cpp_flags_fixup    = -DMSG_WOMP_BASE=200
extra_cpp_flags_asmalloc = $(trmem_cpp_flags)

extra_c_flags_asmalloc = $(trmem_cover_cflags)

#
# lflags
#
extra_l_flags = lib $(wres_lib)
extra_l_flags_qnx = option offset=16k, stack=12k
extra_l_flags_dos_i86 = option stack=6k
extra_l_flags_dos_386 = option stack=12k
extra_l_flags_dos = $(extra_l_flags_dos_$(host_cpu))
extra_l_flags_linux = option stack=12k

# explicit rules
#################

#
# EXE
#
exetarg_prebuild_objs = asmops.gh asmopsd.gh usage.gh wmpmsg.gh wasmmsg.gh msg.gh
exetarg_objs = &
    $(extra_objs_$(host_os)_$(host_cpu)) &
    main.obj &
    write.obj &
    fatal.obj &
    womputil.obj &
    direct.obj &
    posndir.obj &
    asmeval.obj &
    asmalloc.obj &
    asmmsg.obj &
    asmerr.obj &
    wasmmsg.obj &
    macro.obj &
    condasm.obj &
    breakout.obj &
    asmstruc.obj &
    asmexpnd.obj &
    mangle.obj &
    for.obj &
    objio.obj &
    carve.obj &
    genmsomf.obj &
    objrec.obj &
    queue.obj &
    fixup.obj &
    lifix.obj &
    asmins.obj &
    asmscan.obj &
    asmline.obj &
    asmsym.obj &
    tbyte.obj &
    asmlabel.obj &
    asmfixup.obj &
    asmmatch.obj &
    asmdata.obj &
    asmjump.obj &
    autodept.obj &
    dostimet.obj &
    queues.obj &
    pathlist.obj &
    $(trmem_objs)
exetarg_libs = $(wres_lib)
exetarg_res_version_nt_386 = exever.res
exetarg_res_version_nt_x64 = exever.res
exetarg_res_wresui = wresui.res
exetarg_qnx_res    = usage.u
!ifdef bootstrap
exetarg_name       = bwasm
!else
exetarg_name       = wasm
!endif
!include exetarg.mif

#
# rc and others
#
!include verrc.mif

rcui_inc_dirs  = -I. -I"../h" -I"$(womp_dir)/h"

wresui.res : ../h/wasm.rc usage.gh usagej.gh msg.gh wasmmsg.gh wmpmsg.gh $(__MAKEFILES__)
    @%make echo_rc
    $(rcui8) -D_STANDALONE_

wasmmsg.gh : ../h/wasm.msg $(__MAKEFILES__)
    @%make echo_awk
    $(awk) -v base=MSG_WASM_BASE -f $(build_dir)/makemsg.awk -v OUTFILE=$^. $[@

wmpmsg.gh : ../h/womp.msg $(__MAKEFILES__)
    @%make echo_awk
    $(awk) -v base=MSG_WOMP_BASE -f $(build_dir)/makemsg.awk -v OUTFILE=$^. $[@

# optencod options and targets for various hosts
!ifdef exetarg_qnx_res
optencod_opt_qnx    = -u $(exetarg_qnx_res)
!endif
!ifeq release 0
optencod_targ_dbg   = dbg
!endif

usage.gh usage.u : ../h/options.gml $(__MAKEFILES__)
    @%make echo_optencod
    $(noecho)optencod -q $(optencod_opt_$(host_os)) $[@ . . $^&.tmp $(host_os) $(optencod_targ_dbg)
    $(wsplice) -t8 -f "pick((MSG_USAGE_BASE+%$#%+), %s, \"\")" $^&.tmp $@

usagej.gh : ../h/options.gml $(__MAKEFILES__)
    @%make echo_optencod
    $(noecho)optencod -l 1 -q $[@ . . $^&.tmp $(host_os) $(optencod_targ_dbg)
    $(wsplice) -t8 -f "pick((MSG_USAGE_BASE+%$#%+), \"\", %s)" $^&.tmp $@

###################################################################

echo_optencod : .PROCEDURE .EXPLICIT
!ifeq verbose 0
    @echo optencod $@
!endif

/* available FMEDIT DLL routines */

#ifndef _FMEDIT_INCLUDE
#define _FMEDIT_INCLUDE

#define FMEDITAPI   WINAPI

#if defined( FMEDITDLL )
    #define FMEDLLENTRY    __declspec(dllexport)
#elif defined( __NT__ )
    #define FMEDLLENTRY    __declspec(dllimport)
#else
    #define FMEDLLENTRY
#endif

typedef int OBJ_ID;
typedef int ACTION;
typedef int NOTE_ID;

typedef enum {
   SCROLL_NONE,
   SCROLL_HORZ,
   SCROLL_VERT,
   SCROLL_BOTH
} SCR_CONFIG;

typedef void                *OBJPTR;
typedef union object_defn   *OBJHANDLE;
typedef union object_defn   OBJECT_DEFN;
typedef OBJPTR (CALLBACK *CREATE_RTN)( OBJPTR, RECT *, OBJPTR );
typedef CREATE_RTN          CREATE_TABLE[];
typedef unsigned            STATE_HDL;
typedef BOOL (CALLBACK *OBJECT)( ACTION, OBJPTR, void *, void * );

typedef void MOUSEACTION( HWND, RECT * );

#include "constant.def"
#include "fmmenu.def"
#include "list.def"
#include "actions.def"
#include "subreq.def"

extern unsigned     fmedit_version_check( void );

FMEDLLENTRY extern BOOL   CALLBACK FMEditWndProc( HWND, UINT, WPARAM, LPARAM );

FMEDLLENTRY extern void   FMEDITAPI OpenFormEdit( HWND, CREATE_TABLE, int, SCR_CONFIG );
FMEDLLENTRY extern void   FMEDITAPI CloseFormEdit( HWND );
FMEDLLENTRY extern void   FMEDITAPI CloseFormEditID( STATE_HDL );
FMEDLLENTRY extern void   FMEDITAPI ResetFormEdit( HWND );
FMEDLLENTRY extern int    FMEDITAPI FMTranslateAccelerator( HWND, LPMSG );
FMEDLLENTRY extern void   FMEDITAPI AddFMEditMenus( HMENU, int );
FMEDLLENTRY extern STATE_HDL FMEDITAPI InitFormEdit( CREATE_TABLE );
FMEDLLENTRY extern void   FMEDITAPI SetFormEditWnd( STATE_HDL, HWND, int, SCR_CONFIG  );

/* paint exports */

FMEDLLENTRY extern void FMEDITAPI MarkInvalid( LPRECT );
FMEDLLENTRY extern void FMEDITAPI DarkGreyRect( LPRECT, LPSTR, HDC );
FMEDLLENTRY extern void FMEDITAPI OutlineDoubleRect( LPRECT, HDC );
FMEDLLENTRY extern void FMEDITAPI OutlineSingleRect( LPRECT, HDC );
FMEDLLENTRY extern void FMEDITAPI DrawConstText( LPRECT, LPSTR, HDC );

/* object.def exports */

FMEDLLENTRY extern OBJPTR FMEDITAPI Create( OBJ_ID, OBJPTR, RECT *, OBJPTR );
FMEDLLENTRY extern BOOL   FMEDITAPI Register( OBJECT * );
FMEDLLENTRY extern BOOL   FMEDITAPI Move( OBJECT *, POINT *, BOOL );
FMEDLLENTRY extern BOOL   FMEDITAPI Resize( OBJECT *, RECT *, BOOL );
FMEDLLENTRY extern BOOL   FMEDITAPI Location( OBJECT *, RECT * );
FMEDLLENTRY extern BOOL   FMEDITAPI FindObjList( OBJECT *, SUBOBJ_REQUEST *, LIST ** );
FMEDLLENTRY extern BOOL   FMEDITAPI Recreate( OBJECT *, POINT * );
FMEDLLENTRY extern BOOL   FMEDITAPI Draw( OBJECT *, RECT *, HDC );
FMEDLLENTRY extern BOOL   FMEDITAPI Destroy( OBJECT *, BOOL );
FMEDLLENTRY extern BOOL   FMEDITAPI Define( OBJECT *, POINT *, void * );
FMEDLLENTRY extern BOOL   FMEDITAPI Notify( OBJECT *, NOTE_ID, void * );
FMEDLLENTRY extern BOOL   FMEDITAPI Forward( OBJECT *, ACTION, void *, void * );
FMEDLLENTRY extern BOOL   FMEDITAPI ValidateAction( OBJECT *, ACTION, void * );
FMEDLLENTRY extern OBJPTR FMEDITAPI FindObject( SUBOBJ_REQUEST * );
FMEDLLENTRY extern BOOL   FMEDITAPI FindObjectsPt( POINT, LIST ** );
FMEDLLENTRY extern OBJPTR FMEDITAPI FindOneObjPt( POINT pt );
FMEDLLENTRY extern BOOL   FMEDITAPI AddObject( OBJPTR, OBJPTR );
FMEDLLENTRY extern BOOL   FMEDITAPI RemoveObject( OBJPTR, OBJPTR );
FMEDLLENTRY extern BOOL   FMEDITAPI ExecuteCurrObject( ACTION, void *, void * );
FMEDLLENTRY extern BOOL   FMEDITAPI GetResizeInfo( OBJECT *, RESIZE_ID * );
FMEDLLENTRY extern BOOL   FMEDITAPI CutObject( OBJECT *, OBJPTR * );
FMEDLLENTRY extern BOOL   FMEDITAPI CopyObject( OBJECT *, OBJPTR *, OBJPTR );
FMEDLLENTRY extern BOOL   FMEDITAPI PasteObject( OBJECT *, OBJPTR, POINT );
FMEDLLENTRY extern BOOL   FMEDITAPI GetObjectParent( OBJECT *, OBJPTR * );
FMEDLLENTRY extern BOOL   FMEDITAPI GetPriority( OBJECT *, int * );
FMEDLLENTRY extern void   FMEDITAPI MakeObjectCurrent( OBJPTR );
FMEDLLENTRY extern void   FMEDITAPI AddCurrentObject( OBJPTR );
FMEDLLENTRY extern void   FMEDITAPI ResetCurrObject( BOOL );
FMEDLLENTRY extern BOOL   FMEDITAPI ResizeIncrements( OBJECT *, POINT * );
FMEDLLENTRY extern void   FMEDITAPI NewOffset( POINT );

/* state.def exports */

FMEDLLENTRY extern OBJ_ID     FMEDITAPI GetBaseObjType( void );
FMEDLLENTRY extern void       FMEDITAPI SetBaseObjType( OBJ_ID );
FMEDLLENTRY extern BOOL       FMEDITAPI InitState( HWND );
FMEDLLENTRY extern OBJPTR     FMEDITAPI GetMainObject( void );
FMEDLLENTRY extern OBJPTR     FMEDITAPI GetCurrObject( void );
FMEDLLENTRY extern LIST *     FMEDITAPI GetCurrObjectList( void );
FMEDLLENTRY extern void       FMEDITAPI GetOffset( POINT * );
FMEDLLENTRY extern void       FMEDITAPI SetHorizontalInc( unsigned );
FMEDLLENTRY extern void       FMEDITAPI SetVerticalInc( unsigned );
FMEDLLENTRY extern unsigned   FMEDITAPI GetHorizontalInc( void );
FMEDLLENTRY extern unsigned   FMEDITAPI GetVerticalInc( void );
FMEDLLENTRY extern BOOL       FMEDITAPI FMClipObjExists( OBJPTR );
FMEDLLENTRY extern void       FMEDITAPI FMAddClipboard( OBJPTR, OBJPTR );
FMEDLLENTRY extern BOOL       FMEDITAPI FMPasteValid( void );
FMEDLLENTRY extern void       FMEDITAPI FMResetClipboard( void );
FMEDLLENTRY extern void       FMEDITAPI FMNewClipboard( void );
FMEDLLENTRY extern void       FMEDITAPI DisplayError( char * );
FMEDLLENTRY extern BOOL       FMEDITAPI IsEditting( HWND );
FMEDLLENTRY extern void       FMEDITAPI SetShowError( BOOL );
FMEDLLENTRY extern void       FMEDITAPI ClearError( void );
FMEDLLENTRY extern void       FMEDITAPI SetMouseRtn( HWND, MOUSEACTION *);
FMEDLLENTRY extern STATE_HDL  FMEDITAPI GetCurrFormID( void );
FMEDLLENTRY extern BOOL       FMEDITAPI InitStateFormID( STATE_HDL );
FMEDLLENTRY extern void       FMEDITAPI HideSelectBoxes( void );
FMEDLLENTRY extern void       FMEDITAPI ShowSelectBoxes( void );

/* scroll.def exports */
FMEDLLENTRY extern void     FMEDITAPI UpdateScroll( void );

/* application input functions */

FMEDLLENTRY extern BOOL     FMEDITAPI ObjectPress( OBJPTR, POINT *, WORD, HWND );
FMEDLLENTRY extern void     FMEDITAPI ObjectDestroyed( OBJPTR );

#endif

proj_name = wspy
name = wspy

!ifndef wspy_autodepends
wspy_autodepends = .AUTODEPEND
!endif

sys_windowed = 1

!include cproj.mif
!include deftarg.mif
!include defrule.mif

!include $(commonui_dir)/client.mif
!include $(wpi_dir)/client.mif

.EXTENSIONS: .res .rc

!ifeq host_os nt
dllname = ntspyhk
!else
dllname = wspyhk
!endif

objs_win = spy.obj spyglob.obj spybox.obj spyproc.obj spymsgs.obj &
           spyfilt.obj spypick.obj spymdlgs.obj spyarray.obj &
           spymisc.obj spycfg.obj spylog.obj spytool.obj spysel.obj

objs_nt =  spy.obj spyglob.obj spybox.obj spyproc.obj spymsgs.obj &
           spyfilt.obj spypick.obj spymdlgs.obj spyarray.obj spyzord.obj &
           spymisc.obj spycfg.obj spylog.obj spytool.obj spysel.obj

objs = $(objs_$(host_os))

dllobjs = spydll.obj

extra_cpp_flags_nt = -DNOUSE3D

extra_c_flags     += -s -fh
extra_c_flags_i86 += -zu -2 -zW
extra_c_flags_386 += -4
!ifeq host_os win
extra_c_flags_spydll = -bd -mc -fh=spydll.pch
!else ifeq host_os nt
extra_c_flags_spydll = -bd -fh=spydll.pch
!endif

!ifeq release 0
wspy_non_release_option = option rwr
dll_debug_all           = debug all
dll_debug_axp           = debug codeview
!endif

extra_l_flags_win = option stack=9k, heapsize=2k lib $(dllname).lib, commdlg.lib

extra_l_flags_nt  = option stack=100k option heapsize=2k lib $(dllname).lib

extra_l_flags     = option map
!ifeq host_cpu  386
# To maintain cross-version linkability
extra_l_flags_nt  += alias '_WinMain'='_WinMain@16'
!endif

wspy_dll_lflags_wini86 = $(dll_debug_$(host_cpu)) &
                         system windows_dll font mem name $(dllname).dll &
                         $(wspy_non_release_option) &
                         lib windows.lib &
                         option map, rwr &
                         segment CLASS 'CODE' PRELOAD FIXED &
                         export WEP RESIDENT &
                         file { $(dllobjs) }

wspy_dll_lflags_nt386  = $(dll_debug_$(host_cpu)) &
                         system nt_dll initglobal name $(dllname).dll &
                         option map &
                         file { $(dllobjs) }

wspy_dll_lflags_ntaxp  = $(dll_debug_$(host_cpu)) &
                         system ntaxp_dll initglobal name $(dllname).dll &
                         option map &
                         file { $(dllobjs) }

.c: $(wspy_dir);$(sdk_misc_dir)
.h: $(wspy_dir);$(sdk_misc_dir)

inc_dirs = -I"$(wspy_dir)" $(commonui_inc_dirs) $(wpi_inc_dirs)

# systems where version resource must be added to .EXE
version_res_exe_nt_386 = exever.res

xlibs = $(wpi_lib) $(commonui_lib)

$(name).exe : rcstr.gh $(objs) $(name).res $(dllname).lib $(xlibs) $(version_res_exe_$(host_os)_$(host_cpu))
        %create $^&.lnk
        @%append $^&.lnk $(lflags)
        @%append $^&.lnk file { $(objs) }
        @%append $^&.lnk lib { $(xlibs) }
        $(linker) name $^@ @$^&.lnk
!ifeq host_cpu axp
!ifeq release 0
        cvpack $(name).exe
        $(wstrip) -q $(name).exe $(name).exe $(name).sym
!endif
!endif
        $(rc) -k $(name).res $^@ $(bind_version_res_exe_add)
!ifeq host_cpu axp
!ifeq release 0
        $(wstrip) -q -a wspy.exe . wspy.sym
!endif
!endif

rcstr.gh : rcstrmsg.gh
        $(awk) -f $(build_dir)/msgtoh.awk $[@ > $^@

rcstrmsg.gh : $(wspy_dir)/spy.msg
        $(c_pp) -zk0 $(inc_path) $[@ >$^@

$(dllname).lib : $(dllname).dll
        $(librarian) $(libflags) +$[@

$(dllname).dll : $(dllobjs)
        $(linker) $(wspy_dll_lflags_$(host_os)$(host_cpu))

$(name).res: ../$(name).rc .AUTODEPEND
        $(rc) $(rc_flags) -ad -zk0 $(inc_path) $[@ -fo=$^@

!include verrc.mif

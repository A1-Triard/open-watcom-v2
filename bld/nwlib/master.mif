# be very careful with the ordering of the cproj.mif and defrule.mif
proj_name       = wlib

!ifndef wlib_autodepends
wlib_autodepends = .AUTODEPEND
!endif

!ifeq release 0
wlib_trmem = 1
!endif

suppress_bd = 1

wlib_nosymfile = 1

!if defined(bootstrap) || defined(prebuild)
no_libs = 1
!endif
!ifdef no_libs
incl_msgtext = 1
!endif

!ifdef no_libs
!ifdef wlib_dll
!undef wlib_dll
!endif
!ifdef wlib_rtdll
!undef wlib_rtdll
!endif
!endif

!include cproj.mif
!include defrule.mif
!include deftarg.mif

!include trmem.mif

!ifdef no_libs
!include $(orl_dir)/orlobjs.mif
!else
!ifndef incl_msgtext
!include wres.mif
!endif
!include $(orl_dir)/client.mif
!endif

##########
# objects

common_objs = &
    wlib.obj &
    libio.obj &
    symtable.obj &
    omfproc.obj &
    writelib.obj &
    convert.obj &
    wlibutil.obj &
    libwalk.obj &
    symlist.obj &
    proclib.obj &
    cmdline.obj &
    error.obj &
    implib.obj &
    elfobjs.obj &
    orlrtns.obj &
    memfuncs.obj &
    demangle.obj &
    omfutil.obj &
    coffwrt.obj &
    inlib.obj &
    idemsgpr.obj &
    ideentry.obj &
    $(trmem_objs) &
    $(cl_objs)

!ifdef no_libs
common_objs += $(orl_objs)
!endif

dll_objs_nt = ntdll.obj
dll_objs_os2 = os2dll.obj

drv_objs = maindrv.obj idedrv.obj idemsgfm.obj
exe_objs = $(common_objs) $(drv_objs)
dll_objs = $(common_objs) $(dll_objs_$(host_os))

#########
# cflags

extra_c_flags =
!ifdef incl_msgtext
extra_c_flags += -DINCL_MSGTEXT
!endif
!ifndef wlib_dll
extra_c_flags += -DIDE_PGM
!endif

extra_c_flags_ntdll    = -bd
extra_c_flags_os2dll   = -bd
extra_c_flags_trmem    = $(trmem_cflags)
extra_c_flags_memfuncs = $(trmem_cover_cflags)
extra_c_flags_idedrv   = -DSTATIC_LINKAGE

###################
# linker flags .EXE

extra_l_flags = op map, symfile

extra_l_flags_qnx = op offset=64k, stack=60k

###################
# linker flags .DLL

extra_l_flags_dll = op map, symfile

extra_l_flags_dll_nt = initinstance terminstance op offset=0x6A000000
extra_l_flags_dll_os2 = INITINSTANCE TERMINSTANCE

###################
# rc flags

# systems where version resources must be added to .DLL
version_res_dll_nt_386 = version.res

# systems where version resources must be added to .EXE
!ifndef bootstrap
version_res_exe_nt_386 = exever.res
!endif

inc_dirs =  -I. -I.. -I"../h" -I"$(orl_dir)/h" -I"$(lib_misc_dir)/h"
.c: ../c;$(lib_misc_dir)/c;$(watcom_dir)/c;$(trmem_dir)
.h: ../h;$(watcom_dir)/h

!ifdef no_libs
inc_dirs += -I"$(orl_dir)/elf/h" -I"$(orl_dir)/coff/h" -I"$(orl_dir)/omf/h"
.c: $(orl_dir)/c;$(orl_dir)/elf/c;$(orl_dir)/coff/c;$(orl_dir)/omf/c;
.h: $(orl_dir)/h;$(orl_dir)/elf/h;$(orl_dir)/coff/h;$(orl_dir)/omf/h;
!endif

!ifndef no_libs
!ifdef incl_msgtext
xlibs = $(orl_lib)
!else
xlibs = $(wres_lib) $(orl_lib)
!endif
!endif

!ifeq host_os osi
external_dependencies = $(os2ldr)
!endif

!ifdef incl_msgtext
depends_msg = msg.gh incltext.gh
!else
depends_msg = msg.gh wlib.res
!endif
depends_drv = $(drv_objs) wlibd.lib
depends_exe = $(depends_msg) $(exe_objs) $(xlibs) $(external_dependencies)
depends_dll = $(depends_msg) $(dll_objs) $(xlibs) $(external_dependencies)

!ifdef wlib_dll

wlib.exe: $(depends_drv) $(version_res_exe_$(host_os)_$(host_cpu)) $(__MAKEFILES__)
    @%write drv.lnk $(lflags)
    @for %i in ($(drv_objs)) do @%append drv.lnk file %i
    @%append drv.lnk lib wlibd.lib
    $(linker) name $@ @drv.lnk
    @%make bind_version_res_exe

!else

wlib.exe: $(depends_exe) $(version_res_exe_$(host_os)_$(host_cpu)) $(__MAKEFILES__)
!ifndef __WATCOM__
    $(cl) $(clflags) $(exe_objs) $(xlibs)
!else 
    @%write exe.lnk $(lflags)
    @for %i in ($(exe_objs)) do @%append exe.lnk file %i
    @for %i in ($(xlibs)) do @%append exe.lnk lib %i
!ifeq host_os osi
    $(linker) name $^&.rex @exe.lnk
    $(w32bind) $^&.rex $@ $(os2ldr)
    @rm -f $^&.rex
!else
    $(linker) name $@ @exe.lnk
!endif
!endif
    @%make bind_version_res_exe
!ifndef incl_msgtext
    $(wstrip) -q -a -r $@ . wlib.res
!endif

!endif

wlibd.dll: $(depends_dll) $(version_res_dll_$(host_os)_$(host_cpu)) $(__MAKEFILES__)
    @%write dll.lnk $(lflags_dll)
    @for %i in ($(dll_objs)) do @%append dll.lnk file %i
    @for %i in ($(xlibs)) do @%append dll.lnk lib %i
    $(linker) name $@ @dll.lnk
    @%make bind_version_res_dll
!ifndef incl_msgtext
    $(wstrip) -q -a -r $@ . wlib.res
!endif

wlibd.lib: wlibd.dll
    $(librarian) $(libflags) +$[@

msg.gh : wlibmsg.gh
    $(awk) -f $(build_dir)/msgtoh.awk $[@ >$^@

incltext.gh : ../wlib.msg
    $(c_pp) -zk0 $(rc_defines_$(host_os)) >$^@ <<
$#define pick(c,e,j) e,
"",
$#include "$[@"
$#undef pick
<<

wlibmsg.gh : ../wlib.msg
    $(c_pp) -zk0 $(rc_defines_$(host_os)) $[@ >$^@

wlib.res : ../wlib.rc ../wlib.msg msg.gh
    $(rc_aui) $(rc_defines_$(host_os)) $[@ -fo=$@

verrc_dll = wlibd
!include verrc.mif

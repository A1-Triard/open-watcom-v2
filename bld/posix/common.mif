#
#   COMMON:     common definitions of compiler and linker
#

#
#   Macros used by this file:
#
#   posix_dir   Must point to the root of the posix project.
#
#   cflags      If defined, these options to the compiler override the
#               defaults selected by this file.
#
#   make_lib    If this is defined then wmake was invoked to make posixlib.
#
#   if make_lib isn't defined, then the following must be defined:
#
#   name        The name of the command which is being built.  The
#               directory $(posix_dir)/src/$(name) must exist, and
#               contain the source for the command.

#
#       some people don't have the linker variable in their makeinit
#
proj_name = posix

posix_autodepends = .AUTODEPEND

!ifndef model
!ifeq host_cpu i86
model=c
!else ifeq host_cpu 386
!ifeq host_os qnx
model=s
!else
model=f
!endif
!endif
!endif

memory_model_i86=$(model)
memory_model_386=$(model)

!include cproj.mif
!include defrule.mif
!include deftarg.mif

#
# definitions for POSIX library build
#

subdir_i86 = m$(model)
subdir_386 = m$(model)
subdir_x64 = _s
subdir_axp = _s
subdir_mps = _s
subdir_ppc = _s

alt_subdir_dosi86_s = mc
alt_subdir_os2i86_s = mc
alt_subdir_dosi86_c = ms
alt_subdir_os2i86_c = ms

!ifdef bootstrap
stdlibdir=$(subdir_$(host_cpu))
altlibdir=$(alt_subdir_$(host_os)$(host_cpu)_$(model))
!else
stdlibdir=$(posix_dir)/misc/$(host_os)$(host_cpu)/$(subdir_$(host_cpu))
altlibdir=$(posix_dir)/misc/$(host_os)$(host_cpu)/$(alt_subdir_$(host_os)$(host_cpu)_$(model))
!endif

posixlib_objs = &
    alloc.obj &
    argvenv.obj &
    argvrx.obj &
    console.obj &
    die.obj &
    filerx.obj &
    fnlower.obj &
    fncomp.obj &
    getclsz.obj &
    getopt.obj &
    isdotdot.obj &
    lineprt.obj &
    quit.obj &
    regexp.obj

inc_dirs += -I"$(posix_dir)/h"
.c: $(posix_dir)/misc

#
#       define the main target
#
posix.lib : $(posixlib_objs) .explicit
!ifndef __WATCOM_TOOLS__
    @%make echo_lib
    $(blib) $(bld_libflags) $(posixlib_objs)
!else if $(__WATCOM_TOOLS__) >= 1300
    @%make echo_lib
    $(librarian) $(libflags) $(posixlib_objs)
!else
    $(noecho)%create $^&.lbc
    @for %o in ($(posixlib_objs)) do @%append $^&.lbc %o
    @%make echo_lib
    $(bld_lib) @$^&.lbc
!endif

#
#       compiler options
#

extra_cppflags_ntaxp = -DWIN32 -D_WIN32
extra_cpp_flags      = -DSTANDALONE_RX $(extra_cppflags_$(host_os)$(host_cpu)) $(extra_cppflags)

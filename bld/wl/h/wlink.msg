pick( MSG_FILE_REC_NAME_0,      "file %s: " ,
                                "�t�@�C�‹ %s: " )
pick( MSG_FILE_REC_NAME_1,      "(%s): " ,
                                "(%s): " )
pick( MSG_FILE_REC_NAME_2,      "file %1(%2): " ,
                                "�t�@�C�‹ %1(%2): " )
pick( MSG_FILE_REC_NAME_3,      "record %d: " ,
                                "�Ś�R�[�h %d: " )
pick( MSG_FILE_REC_NAME_4,      "file %s, record %d: " ,
                                "�t�@�C�‹ %s, �Ś�R�[�h %d: " )
pick( MSG_FILE_REC_NAME_5,      "(%s), record %d: " ,
                                "(%s), �Ś�R�[�h %d: " )
pick( MSG_FILE_REC_NAME_6,      "file %1(%2), record %d: " ,
                                "�t�@�C�‹ %1(%2), �Ś�R�[�h %d: " )
pick( MSG_ERROR,                "Error! E%d: " ,
                                "�G�‰�[(%d): " )
pick( MSG_WARNING,              "Warning! W%d: " ,
                                "ŚxŤ�(%d): " )
pick( MSG_SYS_BLK,              "system block %s: " ,
                                "�V�X�e�€�E�u�Ť�b�N %s: " )
pick( MSG_ENVIRON,              "environment %s: " ,
                                "ŠÂ‹« %s: " )
pick( MSG_LINE,                 "line(%d): " ,
                                "Ťs(%d): " )
pick( MSG_FORMAT_NOT_DECIDED,   "format not decided" ,
                                "�t�H�[�}�b�g‚ŞŚ�’č‚µ‚Ä‚˘‚Ü‚ą‚ń" )
pick( MSG_NO_LEADER_ON_PASS_2,  "no leader found on pass 2" ,
                                "�p�X‚Q‚Ĺ�Š�[�_�[‚ŞŚ©‚Â‚©‚č‚Ü‚ą‚ń" )
pick( MSG_IOERRLIST_0,          "" , "" )
pick( MSG_IOERRLIST_1,          "" , "" )
pick( MSG_IOERRLIST_2,          "file not found" ,
                                "�t�@�C�‹‚ŞŚ©‚Â‚©‚č‚Ü‚ą‚ń" )
pick( MSG_IOERRLIST_3,          "path not found" ,
                                "�p�X‚ŞŚ©‚Â‚©‚č‚Ü‚ą‚ń" )
pick( MSG_IOERRLIST_4,          "too many open files" ,
                                "�I�[�v�“�E�t�@�C�‹‚Ş‘˝‚·‚¬‚Ü‚·" )
pick( MSG_IOERRLIST_5,          "access denied" ,
                                "�A�N�Z�X‚Ş‹‘”Ű‚ł‚ę‚Ü‚µ‚˝" )
pick( MSG_IOERRLIST_6,          "invalid handle",
                                "�n�“�h�‹‚Ş–łŚř‚Ĺ‚·" )
pick( MSG_IOERRLIST_7,          "disk full" ,
                                "�f�B�X�N‚Ş�ę”t‚Ĺ‚·" )
pick( MSG_PRESS_KEY,            "press any key to continue" ,
                                "‘±Ťs‚·‚é‚˝‚ß‚É‰˝‚©�L�[‚đ‰ź‚µ‚Ä‰ş‚ł‚˘" )
pick( MSG_FILE_TYPES_0,         "OS/2" ,
                                "OS/2" )
pick( MSG_FILE_TYPES_1,         "OS/2 linear" ,
                                "OS/2 �Š�j�A" )
pick( MSG_FILE_TYPES_2,         "OS/2 linear extended" ,
                                "OS/2 �Š�j�AŠg’Ł" )
pick( MSG_FILE_TYPES_3,         "Windows" ,
                                "Windows" )
pick( MSG_FILE_TYPES_4,         "PE" ,
                                "PE" )
pick( MSG_FILE_TYPES_5,         "DOS" ,
                                "DOS" )
pick( MSG_FILE_TYPES_6,         "DOS .COM" ,
                                "DOS .COM" )
pick( MSG_FILE_TYPES_7,         "DOS overlayed" ,
                                "DOS �I�[�o�Ś�C" )
pick( MSG_FILE_TYPES_8,         "Novell Netware" ,
                                "Novell Netware" )
pick( MSG_FILE_TYPES_9,         "QNX" ,
                                "QNX" )
pick( MSG_FILE_TYPES_10,        "Phar Lap simple" ,
                                "Phar Lap �V�“�v�‹" )
pick( MSG_FILE_TYPES_11,        "Phar Lap extended" ,
                                "Phar Lap Šg’Ł" )
pick( MSG_FILE_TYPES_12,        "Phar Lap relocatable" ,
                                "Phar Lap �Š�Ť�P�[�^�u�‹" )
pick( MSG_FILE_TYPES_13,        "Phar Lap segmented" ,
                                "Phar Lap �Z�O���“�g" )
pick( MSG_FILE_TYPES_14,        "QNX 386" ,
                                "QNX 386" )
pick( MSG_FILE_TYPES_15,        "ELF" ,
                                "ELF" )
pick( MSG_FILE_TYPES_16,        "Windows VxD" ,
                                "Windows VxD" )
pick( MSG_FILE_TYPES_17,        "DOS/16M" ,
                                "DOS/16M" )
pick( MSG_FILE_TYPES_18,        "ZDOS" ,
                                "ZDOS" )
pick( MSG_FILE_TYPES_19,        "RAW Binary Image" ,
                                "Raw" )
pick( MSG_FILE_TYPES_20,        "RDOS" ,
                                "RDOS" )
pick( MSG_CREATE_TYPE_DLL,      "dynamic link library" ,
                                "�_�C�i�~�b�N�E�Š�“�N�E�‰�C�u�‰�Š" )
pick( MSG_CREATE_TYPE_EXE,      "executable" ,
                                "ŽŔŤs‰Â”\" )
pick( MSG_IS_A_EXE,             "This is %f" ,
                                "‚±‚ę‚Í %f ‚Ĺ‚·" )

pick( MSG_MAP_BOX_GROUP,        "|   Groups   |" ,
                                "|  �O�‹�[�v  |" )
pick( MSG_MAP_TITLE_GROUP_0,    "Group                           Address              Size" ,
                                "�O�‹�[�v                        �A�h�Ś�X             �T�C�Y" )
pick( MSG_MAP_TITLE_GROUP_1,    "=====                           =======              ====" ,
                                "=====                           =======              ====" )
pick( MSG_MAP_BOX_ABS_SEG,      "|   Absolute Segments   |" ,
                                "|     �â‘Î�Z�O���“�g    |" )
pick( MSG_MAP_TITLE_ABS_SEG_0,  "Segment                 Class           Address              Size" ,
                                "�Z�O���“�g              �N�‰�X          �A�h�Ś�X            �T�C�Y" )
pick( MSG_MAP_TITLE_ABS_SEG_1,  "=======                 =====           =======              ====" ,
                                "==========              ======          ========             ======" )
pick( MSG_MAP_BOX_SEGMENTS,     "|   Segments   |" ,
                                "|  �Z�O���“�g  |" )
pick( MSG_MAP_TITLE_SEGMENTS_0, "Segment                Class          Group          Address         Size" ,
                                "�Z�O���“�g             �N�‰�X         �O�‹�[�v      �A�h�Ś�X        �T�C�Y" )
pick( MSG_MAP_TITLE_SEGMENTS_1, "=======                =====          =====          =======         ====" ,
                                "=========              ======         =========      ========        ======" )
pick( MSG_MAP_BOX_MEMORY_MAP,   "|   Memory Map   |" ,
                                "| ���‚�Š�E�}�b�v |" )
pick( MSG_MAP_UNREF_SYM,        "* = unreferenced symbol" ,
                                "* = ŽQŹĆ‚ł‚ę‚Č‚˘�V�“�{�‹" )
pick( MSG_MAP_REF_LOCAL_SYM,    "+ = symbol only referenced locally" ,
                                "+ = �V�“�{�‹‚Í�Ť�[�J�‹‚Ĺ‚ĚŽQŹĆ‚Ě‚Ý‚Ĺ‚·" )
pick( MSG_MAP_TITLE_MEMORY_MAP_0,   "Address        Symbol" ,
                                    "�A�h�Ś�X       �V�“�{�‹" )
pick( MSG_MAP_TITLE_MEMORY_MAP_1,   "=======        ======" ,
                                    "========       ========" )
pick( MSG_MAP_BOX_OVERLAY_VECTOR,   "|   Overlay Vectors   |" ,
                                    "| �I�[�o�Ś�C�E�x�N�^  |" )
pick( MSG_MAP_BOX_COMMUNAL,     "|   Communal Symbols   |" ,
                                "|     ‹¤—L�V�“�{�‹     |" )
pick( MSG_MAP_TITLE_COMMUNAL_0, "Address        Symbol" ,
                                "�A�h�Ś�X       �V�“�{�‹" )
pick( MSG_MAP_TITLE_COMMUNAL_1, "=======        ======" ,
                                "========       ========" )
pick( MSG_MAP_BOX_MOD_SEG,      "|   Module Segments   |" ,
                                "|�‚�W�…�[�‹ �Z�O���“�g|" )
pick( MSG_MAP_ABS_ADDR,         "* = absolute address" ,
                                "* = �â‘Î�A�h�Ś�X" )
pick( MSG_MAP_32BIT_SEG,        "! = 32-bit segment" ,
                                "! = 32�r�b�g�E�Z�O���“�g" )
pick( MSG_MAP_TITLE_MOD_SEG_0,  "Module          Segment               Class           Address         Size" ,
                                "�‚�W�…�[�‹      �Z�O���“�g            �N�‰�X         �A�h�Ś�X        �T�C�Y" )
pick( MSG_MAP_TITLE_MOD_SEG_1,  "======          =======               =====           =======         ====" ,
                                "==========      ==========            ======          ========        ======" )
pick( MSG_MAP_BOX_TRACE_SYM,    "|   Traced Symbols   |" ,
                                "|  �g�Ś�[�X �V�“�{�‹ |" )
pick( MSG_MAP_BOX_IMP_SYM,      "|   Imported Symbols   |" ,
                                "|  �C�“�|�[�g �V�“�{�‹ |" )
pick( MSG_MAP_TITLE_IMP_SYM_0,  "Symbol" ,
                                "�V�“�{�‹" )
pick( MSG_MAP_TITLE_IMP_SYM_1,  "======" ,
                                "========" )
pick( MSG_MAP_TITLE_IMP_SYM_2,  "Symbol                              Module" ,
                                "�V�“�{�‹                            �‚�W�…�[�‹" )
pick( MSG_MAP_TITLE_IMP_SYM_3,  "======                              ======" ,
                                "========                            ===========" )
pick( MSG_MAP_BOX_UNRES_REF,    "|   Unresolved References   |" ,
                                "|        –˘‰đŚ�‚ČŽQŹĆ       |" )
pick( MSG_MAP_TITLE_UNRES_REF_0,    "Undefined Symbol                Referenced by" ,
                                    "–˘’č‹`�V�“�{�‹                  ŽQŹĆ�‚�W�…�[�‹" )
pick( MSG_MAP_TITLE_UNRES_REF_1,    "================                =============" ,
                                    "==============                  ===============" )
pick( MSG_MAP_BOX_LIB_USED,     "|   Libraries Used   |" ,
                                "|   Žg—p�‰�C�u�‰�Š   |" )
pick( MSG_MAP_BOX_LINKER_STAT,  "|   Linker Statistics   |" ,
                                "|     �Š�“�J�[“ťŚv      |" )
pick( MSG_MAP_STACK_SIZE,       "Stack size:" ,
                                "�X�^�b�N �T�C�Y:" )
pick( MSG_MAP_MEM_SIZE,         "Memory size:" ,
                                "���‚�Š �T�C�Y:" )
pick( MSG_MAP_OVL_SIZE,         "Overlay area size:" ,
                                "�I�[�o�Ś�C �T�C�Y:" )
pick( MSG_MAP_ENTRY_PT_ADDR,    "Entry point address: %a" ,
                                "�G�“�g�Š�A�h�Ś�X: %a" )
pick( MSG_MAP_STUB_FILE,        "Stub file: %s" ,
                                "Stub file: %s" )
pick( MSG_MAP_LINK_TIME,        "Link time: %s" ,
                                "�Š�“�NŽžŠÔ: %s" )
pick( MSG_MAP_COMDAT,           "c = initialized communal data" ,
                                "c = Ź‰Šú‰»‚ł‚ę‚˝‹¤—L�f�[�^" )
pick( MSG_MAP_SYM_STATIC,       "s = symbol is static" ,
                                "s = �V�“�{�‹‚Í�X�^�e�B�b�N‚Ĺ‚·" )
pick( MSG_MAP_DEFINING_MODULE,  "Module: %s(%s)" ,
                                "�‚�W�…�[�‹: %s(%s)" )


/*
 *  General help screen: max 52 lines (from 0 to 51).
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick( MSG_GENERAL_HELP_0,   " " , " " )
pick( MSG_GENERAL_HELP_1,   "usage: wlink {directive}" ,
                            "Žg—p•ű–@: wlink {directive}" )
pick( MSG_GENERAL_HELP_2,   " " , " " )
pick( MSG_GENERAL_HELP_3,   "commands valid for all executable formats:" ,
                            "‘S‚Ä‚ĚŽŔŤs‰Â”\�t�H�[�}�b�g‚Ĺ—LŚř‚Č�R�}�“�h:" )
pick( MSG_GENERAL_HELP_4,   " " , " " )
pick( MSG_GENERAL_HELP_5,   "directive  ::= \"File\"        obj_spec{\",\"obj_spec}" ,
                            "directive  ::= \"File\"        obj_spec{\",\"obj_spec}" )
pick( MSG_GENERAL_HELP_6,   "            | \"Name\"         exe_file" ,
                            "            | \"Name\"         EXE�t�@�C�‹" )
pick( MSG_GENERAL_HELP_7,   "            | \"OPtion\"       option{\",\"option}" ,
                            "            | \"OPtion\"       option{\",\"option}" )
pick( MSG_GENERAL_HELP_8,   "            | \"Library\"      library_file{\",\"library_file}" ,
                            "            | \"Library\"      �‰�C�u�‰�Š�t�@�C�‹{\",\"library_file}" )
pick( MSG_GENERAL_HELP_9,   "            | \"OPTLIB\"       library_file{\",\"library_file}" ,
                            "            | \"OPTLIB\"       �‰�C�u�‰�Š�t�@�C�‹{\",\"�‰�C�u�‰�Š�t�@�C�‹}" )
pick( MSG_GENERAL_HELP_10,  "            | \"Path\"         path_name{\";\"path_name}" ,
                            "            | \"Path\"         �p�X–Ľ{\";\"�p�X–Ľ}" )
pick( MSG_GENERAL_HELP_11,  "            | \"LIBPath\"      path_name{\";\"path_name}" ,
                            "            | \"LIBPath\"      �p�X–Ľ{\";\"�p�X–Ľ}" )
pick( MSG_GENERAL_HELP_12,  "            | \"LIBFile\"      obj_file{\",\"obj_file}" ,
                            "            | \"LIBFile\"      �I�u�W�F�N�g�t�@�C�‹{\",\"�I�u�W�F�N�g�t�@�C�‹}" )
pick( MSG_GENERAL_HELP_13,  "            | \"Debug\"        dbtype [dblist] | dblist" ,
                            "            | \"Debug\"        dbtype [dblist] | dblist" )
pick( MSG_GENERAL_HELP_14,  "            | \"MODTrace\"     module_name{\",\"module_name}" ,
                            "            | \"MODTrace\"     �‚�W�…�[�‹–Ľ{\",\"�‚�W�…�[�‹–Ľ}" )
pick( MSG_GENERAL_HELP_15,  "            | \"SYMTrace\"     symbol_name{\",\"symbol_name}" ,
                            "            | \"SYMTrace\"     �V�“�{�‹–Ľ{\",\"�V�“�{�‹–Ľ}" )
pick( MSG_GENERAL_HELP_16,  "            | \"SYStem\"       system_name" ,
                            "            | \"SYStem\"       �V�X�e�€–Ľ" )
pick( MSG_GENERAL_HELP_17,  "            | \"SYStem Begin\" system_name directive {directive} \"End\"" ,
                            "            | \"SYStem Begin\" �V�X�e�€–Ľ directive {directive} \"End\"" )
pick( MSG_GENERAL_HELP_18,  "            | \"FORMat\"       form" ,
                            "            | \"FORMat\"       form" )
pick( MSG_GENERAL_HELP_19,  "            | \"REFerence\"    symbol_name{\",\"symbol_name}" ,
                            "            | \"REFerence\"    �V�“�{�‹–Ľ{\",\"�V�“�{�‹–Ľ}" )
pick( MSG_GENERAL_HELP_20,  "            | \"@\"            directive_file" ,
                            "            | \"@\"            directive_file" )
pick( MSG_GENERAL_HELP_21,  "            | \"#\"            comment" ,
                            "            | \"#\"            �R���“�g" )
pick( MSG_GENERAL_HELP_22,  "            | \"Alias\"        alias\"=\"symbol_name{\",\"alias\"=\"symbol_name}" ,
                            "            | \"Alias\"        �G�C�Š�A�X\"=\"�V�“�{�‹–Ľ{\",\"�G�C�Š�A�X\"=\"�V�“�{�‹–Ľ}" )
pick( MSG_GENERAL_HELP_23,  "            | \"DISAble\"      msg_num{\",\"msg_num}" ,
                            "            | \"DISAble\"      ���b�Z�[�W”ÔŤ†{\",\"���b�Z�[�W”ÔŤ†}")
pick( MSG_GENERAL_HELP_24,  "            | \"SOrt\"         [\"GLobal\"] [\"ALPhabetical\"]" ,
                            "            | \"SOrt\"         [\"GLobal\"] [\"ALPhabetical\"]")
pick( MSG_GENERAL_HELP_25,  "            | \"LANGuage\"     (\"JApanese\" | \"CHinese\" | \"KOrean\")",
                            "            | \"LANGuage\"     (\"JApanese\" | \"CHinese\" | \"KOrean\")")
pick( MSG_GENERAL_HELP_26,  "            | \"STARTLINK\"",
                            "            | \"STARTLINK\"")
pick( MSG_GENERAL_HELP_27,  "            | \"ENDLINK\"",
                            "            | \"ENDLINK\"")
pick( MSG_GENERAL_HELP_28,  "            | \"MODFile\"      obj_file{\",\"obj_file}" ,
                            "            | \"MODFile\"      �I�u�W�F�N�g�t�@�C�‹{\",\"�I�u�W�F�N�g�t�@�C�‹}" )
pick( MSG_GENERAL_HELP_29,  "obj_spec  ::= obj_file[\"(\"obj_member\")\"] | library_file[\"(\"lib_member\")\"]" ,
                            "obj_spec  ::= �I�u�W�F�N�g�t�@�C�‹[\"(\"�I�u�W�F�N�g���“�o�[\")\"] | �‰�C�u�‰�Š�t�@�C�‹[\"(\"�‰�C�u�‰�Š���“�o�[\")\"]")
pick( MSG_GENERAL_HELP_30,  "dbtype    ::= \"Watcom\" | \"Dwarf\" | \"Codeview\"",
                            "dbtype    ::= \"Watcom\" | \"Dwarf\" | \"Codeview\"")
pick( MSG_GENERAL_HELP_31,  "dblist    ::= dboption{\",\"dboption}" ,
                            "dblist    ::= dboption{\",\"dboption}")
pick( MSG_GENERAL_HELP_32,  "dboption  ::= \"LInes\" | \"Types\" | \"LOcals\" | \"All\"" ,
                            "dboption  ::= \"LInes\" | \"Types\" | \"LOcals\" | \"All\"")
pick( MSG_GENERAL_HELP_33,  "option    ::= \"ARTificial\" | \"[NO]CAChe\" | \"[NO]Caseexact\" | \"CVPack\"",
                            "option    ::= \"ARTificial\" | \"[NO]CAChe\" | \"[NO]Caseexact\" | \"CVPack\"" )
pick( MSG_GENERAL_HELP_34,  "            | \"Dosseg\" | \"ELiminate\" | \"[NO]FARcalls\"",
                            "            | \"Dosseg\" | \"ELiminate\" | \"[NO]FARcalls\"")
pick( MSG_GENERAL_HELP_35,  "            | \"INCremental[=file_name]\" | \"MANGlednames\"",
                            "            | \"INCremental[=�t�@�C�‹–Ľ]\" | \"MANGlednames\"")
pick( MSG_GENERAL_HELP_36,  "            | \"Map\"[\"=\"map_file] | \"MAXErrors=\"n | \"NAMELen=\"n",
                            "            | \"Map\"[\"=\"�}�b�v�t�@�C�‹] | \"MAXErrors=\"n | \"NAMELen=\"n" )
pick( MSG_GENERAL_HELP_37,  "            | \"NODefaultlibs\" | \"NOEXTension\" | \"OSName=\"string | \"Quiet\"",
                            "            | \"NODefaultlibs\" | \"NOEXTension\" | \"OSName=\"•¶Žš—ń | \"Quiet\"" )
pick( MSG_GENERAL_HELP_38,  "            | \"[NO]REDefsok\" | \"STack\"=n | \"START=\"symbol_name | \"STATics\"",
                            "            | \"[NO]REDefsok\" | \"STack\"=n | \"START=\"�V�“�{�‹–Ľ | \"STATics\"" )
pick( MSG_GENERAL_HELP_39,  "            | \"SYMFile\"[\"=\"symbol_file], | \"[NO]Undefsok\" | \"Verbose\"",
                            "            | \"SYMFile\"[\"=\"�V�“�{�‹�t�@�C�‹], | \"[NO]Undefsok\" | \"Verbose\"" )
pick( MSG_GENERAL_HELP_40,  "            | \"VFRemoval\"" ,
                            "            | \"VFRemoval\"" )
                
/*
 *  Dos help screen: max 16 lines (from 0 to 15).
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick( MSG_DOS_HELP_0,   " " , " " )
pick( MSG_DOS_HELP_1,   "commands valid for the MS-DOS executable format only:" ,
                        "MS-DOS ŽŔŤs‰Â”\Ś`Ž®‚É‘Î‚µ‚Ä‚Ě‚Ý—LŚř‚Č�R�}�“�h:" )
pick( MSG_DOS_HELP_2,   " " , " " )
pick( MSG_DOS_HELP_3,   "form      ::= \"Dos\" [\"COM\"]" ,
                        "form      ::= \"Dos\" [\"COM\"]" )
pick( MSG_DOS_HELP_4,   "directive ::= \"NEWsegment\"" ,
                        "directive ::+ \"NEWsegment\"" )                
pick( MSG_DOS_HELP_5,   "option    ::= \"FULLHeader\" | \"PACKCode=\"n | \"PACKData=\"n" ,
                        "option    ::= \"FULLHeader\" | \"PACKCode=\"n | \"PACKData=\"n" )

/*
 *  OS2 help screen: max 32 lines (from 0 to 31).
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick( MSG_OS2_HELP_0,  " " , " " )
pick( MSG_OS2_HELP_1,  "commands valid for the OS/2 and DOS/4G executable formats only:" ,
                       "OS/2ŽŔŤs‰Â”\Ś`Ž®‚É‘Î‚µ‚Ä‚Ě‚Ý—LŚř‚Č�R�}�“�h:" )
pick( MSG_OS2_HELP_2,  " " , " " )
pick( MSG_OS2_HELP_3,  "form      ::= \"OS2\" [\"FLat\" | \"LE\" | \"LX\"] [\"PHYSdevice\" | \"VIRTdevice\"" ,
                       "form      ::= \"OS2\" [\"FLat\" | \"LE\" | \"LX\"] [\"PHYSdevice\" | \"VIRTdevice\"" )
pick( MSG_OS2_HELP_4,  "            | \"DLl\" [\"INITGlobal\" | \"INITInstance\"" ,
                       "            | \"DLl\" [\"INITGlobal\" | \"INITInstance\"" )
pick( MSG_OS2_HELP_5,  "                [\"TERMInstance\" | \"TERMGlobal\"]]" ,
                       "                [\"TERMInstance\" | \"TERMGlobal\"]]" )
pick( MSG_OS2_HELP_6,  "            | \"PM\" | \"PMCompatible\" | \"FULLscreen\"] " ,
                       "            | \"PM\" | \"PMCompatible\" | \"FULLscreen\"] " )
pick( MSG_OS2_HELP_7,  "directive ::= \"NEWsegment\"" ,
                       "directive ::= \"NEWsegment\"" )                
pick( MSG_OS2_HELP_8,  "            | \"SEGment\"     segdesc{\",\"segdesc}" ,
                       "            | \"SEgment\"     segdesc{\",\"segdesc}" )
pick( MSG_OS2_HELP_9,  "            | \"IMPort\"      import{\",\"import}" ,
                       "            | \"IMPort\"      import{\",\"import}" )
pick( MSG_OS2_HELP_10, "            | \"EXPort\"      export{\",\"export}" ,
                       "            | \"EXPort\"      export{\",\"export}" )
pick( MSG_OS2_HELP_11, "            | \"EXPort\"      \"=\"wlib_directive_file" ,
                       "            | \"EXPort\"      \"=\"wlib‹^Ž—–˝—ßĚ§˛Ů" )
pick( MSG_OS2_HELP_12, "segdesc   ::= segspec segmodel {segmodel}" ,
                       "segdesc   ::= segspec segmodel {segmodel}" )
pick( MSG_OS2_HELP_13, "segspec   ::= seg_name | \"Class\" class_name | \"TYpe\" (\"CODE\" | \"DATA\")" ,
                       "segspec   ::= �Z�O���“�g–Ľ | \"Class\" �N�‰�X–Ľ | \"TYpe\" (\"CODE\" | \"DATA\")" )
pick( MSG_OS2_HELP_14, "import    ::= entryname module[\".\"(extname | ordinal)]" ,
                       "import    ::= �G�“�g�Š–Ľ �‚�W�…�[�‹[\".\"(ŠO•”–Ľ | Ź��”)]" )
pick( MSG_OS2_HELP_15, "option    ::= \"Alignment=\"n | \"DEscription\" description | \"Heapsize=\"n" ,
                       "option    ::= \"Alignment=\"n | \"DEscription\" ĂŢ¨˝¸ŘĚßĽ®Ý | \"Heapsize=\"n" )
pick( MSG_OS2_HELP_16, "            | \"IMPFile\"[=file_name] | \"IMPLib\"[=file_name]" ,
                       "            | \"IMPFile\"[=�t�@�C�‹–Ľ] | \"IMPLib\"[=�t�@�C�‹–Ľ]" )
pick( MSG_OS2_HELP_17, "            | (\"MANYautodata\" | \"NOautodata\" | \"ONEAutodata\")" ,
                       "            | (\"MANYautodata\" | \"NOautodata\" | \"ONEAutodata\")" )
pick( MSG_OS2_HELP_18, "            | \"MODName=\"module_name | \"MIXed1632\" | \"NEWFiles\" | \"OFFset=\"n" ,
                       "            | \"MODName=\"�‚�W�…�[�‹–Ľ | \"MIXed1632\" | \"NEWFiles\" | \"OFFset=\"n" )
pick( MSG_OS2_HELP_19, "            | \"OLDlibrary=\"dll_name | \"PACKCode=\"n | \"PACKData=\"n | \"PROTmode\"" ,
                       "            | \"OLDlibrary=\"DLL–Ľ | \"PACKCode=\"n | \"PACKData=\"n | \"PROTmode\"")
pick( MSG_OS2_HELP_20, "            | \"RESource=\"res_file_name | \"STUB=\"stub_name | \"NOSTUB\"" ,
                       "            | \"RESource=\"�Š�\�[�X�t�@�C�‹–Ľ | \"STUB=\"�X�^�u–Ľ | \"NOSTUB\"")
pick( MSG_OS2_HELP_21, "            | \"VERSion=\"major[.minor]" ,
                       "            | \"VERSion=\"ŇĽŢ¬°ĘŢ°ĽŢ®Ý[.Ď˛Ĺ°ĘŢ°ĽŢ®Ý]")
pick( MSG_OS2_HELP_22, "export    ::= entryname[\".\"ordinal][\"=\"internal][\"RESident\"][\"PRIVATE\"][iopl]" ,
                       "export    ::= �G�“�g�Š–Ľ[\".\"Ź��”][\"=\"\/“ŕ•”–Ľ][\"RESident\"][\"PRIVATE\"][I/O“ÁŚ �Ś�x�‹]")
pick( MSG_OS2_HELP_23, "segmodel  ::= (\"PReload\" | \"LOadoncall\") | (\"SHared\" | \"NONShared\")" ,
                       "segmodel  ::= (\"PReload\" | \"LOadoncall\") | {\"SHared\" | \"NONShared\")" )
pick( MSG_OS2_HELP_24, "            | (\"EXECUTEOnly\" | \"EXECUTERead\" | \"READOnly\" | \"READWrite\")" ,
                       "            | (\"EXECUTEOnly\" | \"EXECUTERead\" | \"READOnly\" | \"READWrite\")" )
pick( MSG_OS2_HELP_25, "            | (\"Iopl\" | \"NOIopl\") | (\"CONforming\" | \"NONConforming\")" ,
                       "            | (\"Iopl\" | \"NOIopl\") | (\"CONforming\" | \"NONConforming\")" )
pick( MSG_OS2_HELP_26, "            | (\"PERManent\" | \"NONPERManent\") | \"INValid\" | \"RESident\"" ,
                       "            | (\"PERManent\" | \"NONPERManent\") | \"INValid\" | \"RESident\"" )
pick( MSG_OS2_HELP_27, "            | \"CONTiguous\" | \"DYNamic\"" ,
                       "            | \"CONTiguous\" | \"DYNamic\"" )

/*
 *  Windows help screen: max 32 lines (from 0 to 31).
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick( MSG_WINDOWS_HELP_0,  " " , " " )
pick( MSG_WINDOWS_HELP_1,  "commands valid for the Microsoft Windows executable formats only:" ,
                           "Microsoft WindowsŽŔŤs‰Â”\Ś`Ž®‚É‘Î‚µ‚Ä‚Ě‚Ý—LŚř‚Č�I�v�V�‡�“:" )
pick( MSG_WINDOWS_HELP_2,  " " , " " )
pick( MSG_WINDOWS_HELP_3,  "form      ::= \"WIndows\" [\"DLl\" [\"INITGlobal\" | \"INITInstance\"]] [MEMory] [FOnt]" ,
                           "form      ::= \"WIndows\" [\"DLl\" [\"INITGlobal\" | \"INITInstance\"]] [MEMory] [FOnt]" )
pick( MSG_WINDOWS_HELP_4,  "directive ::= \"NEWsegment\"" ,
                           "directive ::= \"NEWsegment\"" )
pick( MSG_WINDOWS_HELP_5,  "            | \"SEGment\"     segdesc{\",\"segdesc}" ,
                           "            | \"SEgment\"     segdesc{\",\"segdesc}" )
pick( MSG_WINDOWS_HELP_6,  "            | \"IMPort\"      import{\",\"import}" ,
                           "            | \"IMPort\"      import{\",\"import}" )
pick( MSG_WINDOWS_HELP_7,  "            | \"EXPort\"      export{\",\"export}" ,
                           "            | \"EXPort\"      export{\",\"export}" )
pick( MSG_WINDOWS_HELP_8,  "            | \"EXPort\"      \"=\"wlib_directive_file" ,
                           "            | \"EXPort\"      \"=\"wlib‹^Ž—–˝—ßĚ§˛Ů" )
pick( MSG_WINDOWS_HELP_9,  "segdesc   ::= segspec segmodel {segmodel}" ,
                           "segdesc   ::= segspec segmodel {segmodel}" )
pick( MSG_WINDOWS_HELP_10, "segspec   ::= seg_name | \"Class\" class_name | \"TYpe\" (\"CODE\" | \"DATA\")" ,
                           "segspec   ::= �Z�O���“�g–Ľ | \"Class\" �N�‰�X–Ľ | \"TYpe\" (\"CODE\" | \"DATA\")" )
pick( MSG_WINDOWS_HELP_11, "import    ::= entryname module[\".\"(extname | ordinal)]" ,
                           "import    ::= �G�“�g�Š–Ľ �‚�W�…�[�‹[\".\"(ŠO•”–Ľ | Ź��”)]" )
pick( MSG_WINDOWS_HELP_12, "option    ::= \"Alignment=\"n | \"DEscription\" description | \"Heapsize=\"n" ,
                           "option    ::= \"Alignment=\"n | \"DEscription\" ĂŢ¨˝¸ŘĚßĽ®Ý | \"Heapsize=\"n" )
pick( MSG_WINDOWS_HELP_13, "            | \"IMPFile\"[=file_name] | \"IMPLib\"[=file_name]" ,
                           "            | \"IMPFile\"[=�t�@�C�‹–Ľ] | \"IMPLib\"[=�t�@�C�‹–Ľ]" )
pick( MSG_WINDOWS_HELP_14, "            | (\"MANYautodata\" | \"NOautodata\" | \"ONEAutodata\")" ,
                           "            | (\"MANYautodata\" | \"NOautodata\" | \"ONEAutodata\")" )
pick( MSG_WINDOWS_HELP_15, "            | \"MODName=\"module_name | \"OLDlibrary=\"dll_name | \"PACKCode=\"n" ,
                           "            | \"MODName=\"�‚�W�…�[�‹–Ľ | \"OLDlibrary=\"DLL–Ľ | \"PACKCode=\"n" )
pick( MSG_WINDOWS_HELP_16, "            | \"PACKData=\"n | \"RESource=\"res_file_name | \"RWReloccheck\"" ,
                           "            | \"PACKData=\"n | \"RESource=\"�Š�\�[�X�t�@�C�‹–Ľ | \"RWReloccheck\"")
pick( MSG_WINDOWS_HELP_17, "            | \"STUB=\"stub_name | \"NOSTUB\" | \"VERSion=\"major[.minor]" ,
                           "            | \"STUB=\"�X�^�u–Ľ | \"NOSTUB\" | \"VERSion=\"ŇĽŢ¬°ĘŢ°ĽŢ®Ý[.Ď˛Ĺ°ĘŢ°ĽŢ®Ý]")
pick( MSG_WINDOWS_HELP_18, "export    ::= entryname[\".\"ordinal][\"=\"internal][\"RESident\"][\"PRIVATE\"]" ,
                           "export    ::= �G�“�g�Š–Ľ[\".\"Ź��”][\"=\"“ŕ•”–Ľ][\"RESident\"][\"PRIVATE\"]" )
pick( MSG_WINDOWS_HELP_19, "segmodel  ::= (\"PReload\" | \"LOadoncall\") | (\"SHared\" | \"NONShared\")" ,
                           "segmodel  ::= (\"PReload\" | \"LOadoncall\") | (\"SHared\" | \"NONShared\")" )
pick( MSG_WINDOWS_HELP_20, "            | (\"EXECUTEOnly\" | \"EXECUTERead\" | \"READOnly\" | \"READWrite\")" ,
                           "            | (\"EXECUTEOnly\" | \"EXECUTERead\" | \"READOnly\" | \"READWrite\")" )
pick( MSG_WINDOWS_HELP_21, "            | (\"MOVeable\" | \"FIXed\") | \"DIScardable\"" ,
                           "            | (\"MOVeable\" | \"FIXed\") | \"DIScardable\"" )

/*
 *  NT help screen: max 32 lines (from 0 to 31).
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick( MSG_NT_HELP_0,  " " , " " )
pick( MSG_NT_HELP_1,  "commands valid for the Microsoft Windows NT executable formats only:" ,
                      "Microsoft Windows NTŽŔŤs‰Â”\Ś`Ž®‚É‘Î‚µ‚Ä‚Ě‚Ý—LŚř‚Č�I�v�V�‡�“:" )
pick( MSG_NT_HELP_2,  " " , " " )
pick( MSG_NT_HELP_3,  "form      ::= \"WIndows NT\" [\"TNT\"]" ,
                      "form      ::= \"WIndows NT\" [\"TNT\"]" )
pick( MSG_NT_HELP_4,  "              [\"DLl\" [\"INITGlobal\" | \"INITInstance\" | \"INITThread\"" ,
                      "              [\"DLl\" [\"INITGlobal\" | \"INITInstance\" | \"INITThread\"" )
pick( MSG_NT_HELP_5,  "                  [\"TERMInstance\" | \"TERMGlobal\" | \"TERMThread\"]]]" ,
                      "                  [\"TERMInstance\" | \"TERMGlobal\" | \"TERMThread\"]]]" )
pick( MSG_NT_HELP_6,  "directive ::= \"RUntime\"     runoption[=major[.minor]]" ,
                      "directive ::= \"RUntime\"     runoption[=ŇĽŢ¬°ĘŢ°ĽŢ®Ý[.Ď˛Ĺ°ĘŢ°ĽŢ®Ý]]")             
pick( MSG_NT_HELP_7,  "            | \"SEGment\"     segdesc{\",\"segdesc}" ,
                      "            | \"SEgment\"     segdesc{\",\"segdesc}" )
pick( MSG_NT_HELP_8,  "            | \"IMPort\"      import{\",\"import}" ,
                      "            | \"IMPort\"      import{\",\"import}" )
pick( MSG_NT_HELP_9,  "            | \"EXPort\"      export{\",\"export}" ,
                      "            | \"EXPort\"      export{\",\"export}" )
pick( MSG_NT_HELP_10, "            | \"EXPort\"      \"=\"wlib_directive_file" ,
                      "            | \"EXPort\"      \"=\"wlib‹^Ž—–˝—ßĚ§˛Ů" )
pick( MSG_NT_HELP_11, "            | \"COMmit\"       commitopt{\",\"commitopt}" ,
                      "            | \"COMmit\"       commitopt{\",\"commitopt}" )
pick( MSG_NT_HELP_12, "segdesc   ::= segspec segmodel {segmodel}" ,
                      "segdesc   ::= segspec segmodel {segmodel}" )
pick( MSG_NT_HELP_13, "segspec   ::= seg_name | \"Class\" class_name | \"TYpe\" (\"CODE\" | \"DATA\")" ,
                      "segspec   ::= �Z�O���“�g–Ľ | \"Class\" �N�‰�X–Ľ | \"TYpe\" (\"CODE\" | \"DATA\")" )
pick( MSG_NT_HELP_14, "import    ::= entryname module[\".\"(extname | ordinal)]" ,
                      "import    ::= �G�“�g�Š–Ľ �‚�W�…�[�‹[\".\"(ŠO•”–Ľ | Ź��”)]" )
pick( MSG_NT_HELP_15, "option    ::= \"Alignment=\"n | \"DEscription\" description | \"Heapsize=\"n" ,
                      "option    ::= \"Alignment=\"n | \"DEscription\" ĂŢ¨˝¸ŘĚßĽ®Ý | \"Heapsize=\"n" )
pick( MSG_NT_HELP_16, "            | \"IMPFile\"[=file_name] | \"IMPLib\"[=file_name]" ,
                      "            | \"IMPFile\"[=�t�@�C�‹–Ľ] | \"IMPLib\"[=�t�@�C�‹–Ľ]" )
pick( MSG_NT_HELP_17, "            | \"MODName=\"module_name | \"NOSTDCall\" | \"OBJAlign=\"n | \"OFFset=\"n" ,
                      "            | \"MODName=\"�‚�W�…�[�‹–Ľ | \"NOSTDCall\" | \"OBJAlign=\"n | \"OFFset=\"n" )
pick( MSG_NT_HELP_18, "            | \"OLDlibrary=\"dll_name | \"RESource=\"res_file_name" ,
                      "            | \"OLDlibrary=\"DLL–Ľ | \"RESource=\"�Š�\�[�X�t�@�C�‹–Ľ")
pick( MSG_NT_HELP_19, "            | \"STUB=\"stub_name | \"NOSTUB\" | \"VERSion\"=major[.minor]" ,
                      "            | \"STUB=\"�X�^�u–Ľ | \"NOSTUB\" | \"VERSion=\"ŇĽŢ¬°ĘŢ°ĽŢ®Ý.[Ď˛Ĺ°ĘŢ°ĽŢ®Ý]")
pick( MSG_NT_HELP_20, "export    ::= entryname[\".\"ordinal][\"=\"internal][\"PRIVATE\"]" ,
                      "export    ::= �G�“�g�Š–Ľ[\".\"Ź��”][\"=\"“ŕ•”–Ľ][\"PRIVATE\"]" )
pick( MSG_NT_HELP_21, "segmodel  ::= (\"SHared\" | \"NONShared\") | (\"PAGEable\" | \"NONPageable\")" ,
                      "segmodel  ::= (\"SHared\" | \"NONShared\") | (\"PAGEable\" | \"NONPageable\")" )
pick( MSG_NT_HELP_22, "runoption ::= (\"NATive\" | \"WINdows\" | \"CONsole\" | \"POSix\" | \"OS2\" | \"DOSstyle\"" ,
                      "runoption ::= (\"NATive\" | \"WINdows\" | \"CONsole\" | \"POSix\" | \"OS2\" | \"DOSstyle\"" )
pick( MSG_NT_HELP_23, "            | \"RDOS\" | \"EFIBoot\")" ,
                      "            | \"RDOS\" | \"EFIBoot\")" )
pick( MSG_NT_HELP_24, "commitopt ::= \"STack=\"n | \"Heap=\"n" ,
                      "commitopt ::= \"STack=\"n | \"Heap=\"n" )

/*
 *  Phar Lap help screen: max 16 lines (from 0 to 15).
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick( MSG_PHAR_HELP_0,  " " , " " )               
pick( MSG_PHAR_HELP_1,  "commands valid for the Phar Lap executable formats only:" ,
                        "Phar LapŽŔŤs‰Â”\Ś`Ž®‚É‘Î‚µ‚Ä‚Ě‚Ý—LŚř‚Č�I�v�V�‡�“:" )
pick( MSG_PHAR_HELP_2,  " " , " " )               
pick( MSG_PHAR_HELP_3,  "form      ::= \"PHARlap\" [\"EXTended\" | \"REX\" | \"SEGmented\"]" ,
                        "form      ::= \"PHARlap\" [\"EXTended\" | \"REX\"]" )
pick( MSG_PHAR_HELP_4,  "directive ::= \"RUntime\"     runoption{\",\"runoption}" ,
                        "directive ::= \"RUntime\"     runoption{\",\"runoption}" )
pick( MSG_PHAR_HELP_5,  "option    ::= \"MAXData=\"n | \"MINData=\"n | \"OFFset=\"n | \"STUB=\"stub_name" ,
                        "option    ::= \"MAXData=\"n | \"MINData=\"n | \"OFFset=\"n | \"STUB=\"�X�^�u–Ľ" )
pick( MSG_PHAR_HELP_6,  "runoption ::= \"MINReal=\"n | \"MAXReal=\"n | \"CALLBufs=\"n | \"MINIBuf=\"n" ,
                        "runoption ::= \"MINReal=\"n | \"MAXReal=\"n | \"CALLBufs=\"n | \"MINIBuf=\"n" )
pick( MSG_PHAR_HELP_7,  "            | \"MAXIBuf=\"n | \"NISTack=\"n | \"ISTKsize=\"n | \"PRIVileged\"" ,
                        "            | \"MAXIBuf=\"n | \"NISTack=\"n | \"ISTKsize=\"n | \"PRIVileged\"" )
pick( MSG_PHAR_HELP_8,  "            | \"REALBreak=\"(n | symbol_name ) | \"UNPRIVileged\"" ,
                        "            | \"REALBreak=\"(n | �V�“�{�‹–Ľ)  | \"UNPRIVileged\"" )

/*
 *  Novell help screen: max 32 lines (from 0 to 31).
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick( MSG_NOVELL_HELP_0,    " " , " " )
pick( MSG_NOVELL_HELP_1,    "commands valid for the Novell Netware executable format only:" ,
                            "Novell NetwareŽŔŤs‰Â”\Ś`Ž®‚É‘Î‚µ‚Ä‚Ě‚Ý—LŚř‚Č�R�}�“�h:" )
pick( MSG_NOVELL_HELP_2,    " " , " " )
pick( MSG_NOVELL_HELP_3,    "form      ::= \"NOVell\" [\"NLM\" | \"LAN\" | \"DSK\" | \"NAM\" | 'number'] 'description'" ,
                            "form      ::= \"NOVell\" [\"NLM\" | \"LAN\" | \"DSK\" | \"NAM\" | 'number'] ĂŢ¨˝¸ŘĚßĽ®Ý" )
pick( MSG_NOVELL_HELP_4,    "directive ::= \"MODUle\"      module_name{\",\"module_name}" ,
                            "directive ::= \"MODUle\"      �‚�W�…�[�‹–Ľ{\",\"�‚�W�…�[�‹–Ľ}" )
pick( MSG_NOVELL_HELP_5,    "            | \"IMPort\"      import{\",\"import}" ,
                            "            | \"IMPort\"      import{\",\"import}" )
pick( MSG_NOVELL_HELP_6,    "            | \"EXPort\"      export{\",\"export}" ,
                            "            | \"EXPort\"      export{\",\"export}" )
pick( MSG_NOVELL_HELP_7,    "            | \"Debug\"       \"Novell\" [\"ONLyexports\"] [\"REFerenced\"]" ,
                            "            | \"Debug\"       \"Novell\" [\"ONLyexports\"] [\"REFerenced\"]" )
pick( MSG_NOVELL_HELP_8,    "option    ::= \"CHeck=\"symbol_name | \"COPYRight\" [string] | \"CUSTom=\"file_name" ,
                            "option    ::= \"CHeck=\"�V�“�{�‹–Ľ | \"COPYRight\" [•¶Žš—ń] | \"CUSTom=\"�t�@�C�‹–Ľ" )
pick( MSG_NOVELL_HELP_9,    "            | \"EXit=\"symbol_name | \"HElp=\"file_name | \"IMPFile=\"file_name" ,
                            "            | \"EXit=\"�V�“�{�‹–Ľ | \"HElp=\"�t�@�C�‹–Ľ | \"IMPFile=\"�t�@�C�‹–Ľ" )
pick( MSG_NOVELL_HELP_10,   "            | \"IMPLib\"[=file_name] | \"MESsages\"[=file_name] | \"MULTILoad\"" ,
                            "            | \"IMPLib\"[=�t�@�C�‹–Ľ] | \"MESsages\"[=�t�@�C�‹–Ľ] | \"MULTILoad\"" )
pick( MSG_NOVELL_HELP_11,   "            | \"NLMFlags=\"value | \"PSeudopreemption\" | \"REentrant\"" ,
                            "            | \"NLMFlags=\"value | \"PSeudopreemption\" | \"REentrant\"" )
pick( MSG_NOVELL_HELP_12,   "            | \"SCReenname\" description | \"SHArelib=\"file_name | \"SYnchronize\"" ,
                            "            | \"SCReenname\" ĂŢ¨˝¸ŘĚßĽ®Ý | \"SHArelib=\"�t�@�C�‹–Ľ | \"SYnchronize\"" )
pick( MSG_NOVELL_HELP_13,   "            | \"THReadname\" name | \"VERSion=\"major[.minor[.revision]]" ,
                            "            | \"THReadname\" name | \"VERSion=\"ŇĽŢ¬°ĘŢ°ĽŢ®Ý[.Ď˛Ĺ°ĘŢ°ĽŢ®Ý[.ŘËŢĽŢ®Ý]]" )
pick( MSG_NOVELL_HELP_14,   "            | \"XDCdata=\"file_name | \"AUTOUNload\"" ,
                            "            | \"XDCdata=\"�t�@�C�‹–Ľ | \"AUTOUNload\"" )
pick( MSG_NOVELL_HELP_15,   "import    ::= entryname" ,
                            "import    ::= �G�“�g�Š–Ľ" )                
pick( MSG_NOVELL_HELP_16,   "export    ::= entryname" ,
                            "export    ::= �G�“�g�Š–Ľ" )                

/*
 *  Dos/16M help screen: max 16 lines (from 0 to 15).
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick( MSG_DOS16_HELP_0,     " " , " " )               
pick( MSG_DOS16_HELP_1,     "commands valid for the DOS/16M executable format only:" ,
                            "DOS/16MŽŔŤs‰Â”\Ś`Ž®‚É‘Î‚µ‚Ä‚Ě‚Ý—LŚř‚Č�R�}�“�h:" )
pick( MSG_DOS16_HELP_2,     " " , " " )
pick( MSG_DOS16_HELP_3,     "form      ::= \"DOS16M\"" ,
                            "form      ::= \"DOS16m\"" )
pick( MSG_DOS16_HELP_4,     "directive ::= \"MEMory\"      strategy" ,
                            "directive ::= \"MEMory\"      strategy" )              
pick( MSG_DOS16_HELP_5,     "            | \"TRansparent\" seg_type" ,
                            "            | \"TRansparent\" seg_type" )              
pick( MSG_DOS16_HELP_6,     "            | \"RUntime\"     runoption{\",\"runoption}" ,
                            "            | \"RUntime\"     runoption{\",\"runoption}" )
pick( MSG_DOS16_HELP_7,     "option    ::= \"BUFfer=\"n | \"GDTsize=\"n | (\"RELocs\" | \"NORelocs\") | \"SELstart=\"n" ,
                            "option    ::= \"BUFfer=\"n | \"GDTsize=\"n | (\"RELocs\" | \"NORelocs\") | \"SELstart=\"n" )
pick( MSG_DOS16_HELP_8,     "            | \"DATASize=\"n | \"EXTended=\"n" ,
                            "            | \"DATASize=\"n | \"EXTended=\"n" )
pick( MSG_DOS16_HELP_9,     "            | \"EXPName=\"exp_name | \"STUB=\"stub_name" ,
                            "            | \"EXPName=\"exp_name | \"STUB=\"�X�^�u–Ľ")
pick( MSG_DOS16_HELP_10,    "runoption ::= \"KEYboard\" | \"OVERload\" | \"INIT00\" | \"INITFF\" | \"ROTate\" | \"AUTO\"" ,
                            "runoption ::=  \"KEYbord\" | \"OVERload\" | \"INIT00\" | \"INITFF\" | \"ROTate\" | \"AUTO\"" )
pick( MSG_DOS16_HELP_11,    "            | \"SELectors\" | \"INT10\"" ,
                            "            | \"SELectors\" | \"INT10\"" )
pick( MSG_DOS16_HELP_12,    "strategy  ::= \"TRYExtended\" | \"TRYLow\" | \"FORCEExtended\" | \"FORCELow\"" ,
                            "strategy  ::= \"TRYExtended\" | \"TRYLow\" | \"FORCEExtended\" | \"FORCELow\"" )
pick( MSG_DOS16_HELP_13,    "seg_type  ::= \"STack\" | \"DAta\"" ,
                            "seg_type  ::= \"STack\" | \"DAta\"" )              

/*
 *  QNX help screen: max 16 lines (from 0 to 15).
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick( MSG_QNX_HELP_0,   " " , " " )               
pick( MSG_QNX_HELP_1,   "commands valid for the QNX executable format only:" ,
                        "QNXŽŔŤs‰Â”\Ś`Ž®‚É‘Î‚µ‚Ä‚Ě‚Ý—LŚř‚Č�R�}�“�h:" )              
pick( MSG_QNX_HELP_2,   " " , " " )               
pick( MSG_QNX_HELP_3,   "form      ::= \"QNX\" [\"FLat\"]" ,
                        "form      ::= \"QNX\" [\"FLat\"]" )                
pick( MSG_QNX_HELP_4,   "directive ::= \"SEGment\"     segdesc{\",\"segdesc}" ,
                        "directive ::= \"SEgment\"     segdesc{\",\"segdesc}" )
pick( MSG_QNX_HELP_5,   "            | \"NEWsegment\"" ,
                        "            | \"NEWsegment\"" )
pick( MSG_QNX_HELP_6,   "option    ::= \"Heapsize=\"n | \"LInearrelocs\" | \"LOnglived\" | \"NORelocs\"" ,
                        "option    ::= \"Heapsize=\"n | \"LInearrelocs\" | \"LOnglived\" | \"NORelocs\"" )
pick( MSG_QNX_HELP_7,   "            | \"OFFset=\"n | \"PACKCode=\"n | \"PACKData=\"n | \"PRIVilege\"=n" ,
                        "            | \"OFFset=\"n | \"PACKCode=\"n | \"PACKData=\"n | \"PRIVilege\"=n" )
pick( MSG_QNX_HELP_8,   "            | \"RESource\"(\"=\"res_file_name | string)" ,
                        "            | \"RESource\"(\"=\"�Š�\�[�X�t�@�C�‹–Ľ | •¶Žš—ń)" )
pick( MSG_QNX_HELP_9,   "segdesc   ::= segspec segmodel {segmodel}" ,
                        "segdesc   ::= segspec segmodel {segmodel}" )
pick( MSG_QNX_HELP_10,  "segspec   ::= seg_name | \"Class\" class_name | \"TYpe\" (\"CODE\" | \"DATA\")" ,
                        "segspec   ::= �Z�O���“�g–Ľ | \"Class\" �N�‰�X–Ľ | \"TYpe\" (\"CODE\" | \"DATA\")" )
pick( MSG_QNX_HELP_11,  "segmodel  ::= \"EXECUTEOnly\" | \"EXECUTERead\" | \"READOnly\" | \"READWrite\"" ,
                        "segmodel  ::= \"EXECUTEOnly\" | \"EXECUTERead\" | \"READOnly\" | \"READWrite\"" )

/*
 *  ELF help screen: max 16 lines (from 0 to 15).
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick( MSG_ELF_HELP_0,   " " , " " )
pick( MSG_ELF_HELP_1,   "commands valid for the ELF executable format only:" ,
                        "ELFŽŔŤs‰Â”\�t�H�[�}�b�g‚É‘Î‚µ‚Ä‚Ě‚Ý‚Ě�R�}�“�h‚Ĺ‚·:" )
pick( MSG_ELF_HELP_2,   " " , " " )
pick( MSG_ELF_HELP_3,   "form      ::= \"ELF\" [\"DLl\"]" ,
                        "form      ::= \"ELF\" [\"DLl\"]" )
pick( MSG_ELF_HELP_4,   "directive ::= \"MODUle\"      module_name{\",\"module_name}" ,
                        "directive ::= \"MODUle\"      �‚�W�…�[�‹–Ľ{\",\"�‚�W�…�[�‹–Ľ}" )
pick( MSG_ELF_HELP_5,   "            | \"IMPort\"      import{\",\"import}" ,
                        "            | \"IMPort\"      import{\",\"import}" )
pick( MSG_ELF_HELP_6,   "            | \"EXPort\"      export{\",\"export}" ,
                        "            | \"EXPort\"      export{\",\"export}" )
pick( MSG_ELF_HELP_7,   "            | \"RUntime\"     runoption{\",\"runoption}" ,
                        "            | \"RUntime\"     runoption{\",\"runoption}" )
pick( MSG_ELF_HELP_8,   "option    ::= \"Alignment=\"n | \"EXPORTAll\" | \"EXTRASections=\"n | \"OBJAlign=\"n" ,
                        "option    ::= \"Alignment=\"n | \"EXPORTAll\" | \"EXTRASections=\"n | \"OBJAlign=\"n" )
pick( MSG_ELF_HELP_9,   "            | \"OFFSet=\"n" ,
                        "            | \"OFFSet=\"n" )
pick( MSG_ELF_HELP_10,  "import    ::= entryname" ,
                        "import    ::= �G�“�g�Š–Ľ" )
pick( MSG_ELF_HELP_11,  "export    ::= entryname" ,
                        "export    ::= �G�“�g�Š–Ľ" )
pick( MSG_ELF_HELP_12,  "runoption ::= (\"SVR4\" | \"LINux\" | \"FREebsd\" | \"NETbsd\" | \"SOLaris\" | \"ABIver\")" ,
                        "runoption ::= (\"SVR4\" | \"LINux\" | \"FREebsd\" | \"NETbsd\" | \"SOLaris\" | \"ABIver\")" )


/*
 *  Windows VXD help screen: max 32 lines (from 0 to 31).
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick( MSG_WIN_VXD_HELP_0,   " " , " " )
pick( MSG_WIN_VXD_HELP_1,   "commands valid for the Microsoft Windows VxD formats only:" ,
                            "Microsoft Windows VxDŽŔŤs‰Â”\Ś`Ž®‚É‘Î‚µ‚Ä‚Ě‚Ý—LŚř‚Č�I�v�V�‡�“:" )
pick( MSG_WIN_VXD_HELP_2,   " " , " " )
pick( MSG_WIN_VXD_HELP_3,   "form      ::= \"WIndows VXD\" [\"STATic\" | \"DYNamic\"]" ,
                            "form      ::= \"WIndows VXD\" [\"STATic\" | \"DYNamic\"]" )
/*
pick( MSG_WIN_VXD_HELP_4,   "directive ::= \"NEWsegment\"" ,
                            "directive ::= \"NEWsegment\"" )
pick( MSG_WIN_VXD_HELP_5,   "            | \"SEGment\"     segdesc{\",\"segdesc}" ,
                            "            | \"SEgment\"     segdesc{\",\"segdesc}" )
pick( MSG_WIN_VXD_HELP_6,   "            | \"IMPort\"      import{\",\"import}" ,
                            "            | \"IMPort\"      import{\",\"import}" )
pick( MSG_WIN_VXD_HELP_7,   "            | \"EXPort\"      export{\",\"export}" ,
                            "            | \"EXPort\"      export{\",\"export}" )
pick( MSG_WIN_VXD_HELP_8,   "            | \"EXPort\"      \"=\"wlib_directive_file" ,
                            "            | \"EXPort\"      \"=\"wlib‹^Ž—–˝—ßĚ§˛Ů" )
pick( MSG_WIN_VXD_HELP_9,   "segdesc   ::= segspec segmodel {segmodel}" ,
                            "segdesc   ::= segspec segmodel {segmodel}" )
pick( MSG_WIN_VXD_HELP_10,  "segspec   ::= seg_name | \"Class\" class_name | \"TYpe\" (\"CODE\" | \"DATA\")" ,
                            "segspec   ::= �Z�O���“�g–Ľ | \"Class\" �N�‰�X–Ľ | \"TYpe\" (\"CODE\" | \"DATA\")" )
pick( MSG_WIN_VXD_HELP_11,  "import    ::= entryname module[\".\"(extname | ordinal)]" ,
                            "import    ::= �G�“�g�Š–Ľ �‚�W�…�[�‹[\".\"(ŠO•”–Ľ | Ź��”)]" )
pick( MSG_WIN_VXD_HELP_12,  "option    ::= \"Alignment=\"n | \"DEscription\" description | \"Heapsize=\"n" ,
                            "option    ::= \"Alignment=\"n | \"DEscription\" ĂŢ¨˝¸ŘĚßĽ®Ý | \"Heapsize=\"n" )
pick( MSG_WIN_VXD_HELP_13,  "            | \"IMPFile\"[=file_name] | \"IMPLib\"[=file_name]" ,
                            "            | \"IMPFile\"[=�t�@�C�‹–Ľ] | \"IMPLib\"[=�t�@�C�‹–Ľ]" )
pick( MSG_WIN_VXD_HELP_14,  "            | (\"MANYautodata\" | \"NOautodata\" | \"ONEAutodata\")" ,
                            "            | (\"MANYautodata\" | \"NOautodata\" | \"ONEAutodata\")" )
pick( MSG_WIN_VXD_HELP_15,  "            | \"MODName=\"module_name | \"OLDlibrary=\"dll_name | \"PACKCode=\"n" ,
                            "            | \"MODName=\"�‚�W�…�[�‹–Ľ | \"OLDlibrary=\"DLL–Ľ | \"PACKCode=\"n" )
pick( MSG_WIN_VXD_HELP_16,  "            | \"PACKData=\"n | \"RESource=\"res_file_name | \"RWReloccheck\"" ,
                            "            | \"PACKData=\"n | \"RESource=\"�Š�\�[�X�t�@�C�‹–Ľ | \"RWReloccheck\"")
pick( MSG_WIN_VXD_HELP_17,  "            | \"STUB=\"stub_name | \"NOSTUB\" | \"VERSion=\"major[.minor]" ,
                            "            | \"STUB=\"�X�^�u–Ľ | \"NOSTUB\" | \"VERSion=\"ŇĽŢ¬°ĘŢ°ĽŢ®Ý[.Ď˛Ĺ°ĘŢ°ĽŢ®Ý]")
pick( MSG_WIN_VXD_HELP_18,  "export    ::= entryname[\".\"ordinal][\"=\"internal][\"RESident\"][\"PRIVATE\"]" ,
                            "export    ::= �G�“�g�Š–Ľ[\".\"Ź��”][\"=\"“ŕ•”–Ľ][\"RESident\"][\"PRIVATE\"]" )
pick( MSG_WIN_VXD_HELP_19,  "segmodel  ::= (\"PReload\" | \"LOadoncall\") | (\"SHared\" | \"NONShared\")" ,
                            "segmodel  ::= (\"PReload\" | \"LOadoncall\") | (\"SHared\" | \"NONShared\")" )
pick( MSG_WIN_VXD_HELP_20,  "            | (\"EXECUTEOnly\" | \"EXECUTERead\" | \"READOnly\" | \"READWrite\")" ,
                            "            | (\"EXECUTEOnly\" | \"EXECUTERead\" | \"READOnly\" | \"READWrite\")" )
pick( MSG_WIN_VXD_HELP_21,  "            | (\"MOVeable\" | \"FIXed\") | \"DIScardable\"" ,
                            "            | (\"MOVeable\" | \"FIXed\") | \"DIScardable\"" )
*/

/*
 *  Zdos help screen: max 16 lines (from 0 to 15).
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick( MSG_ZDOS_HELP_0,      " " , " " )
pick( MSG_ZDOS_HELP_1,      "commands valid for the ZDOS executable formats only:" ,
                            "ZDOS ŽŔŤs‰Â”\Ś`Ž®‚É‘Î‚µ‚Ä‚Ě‚Ý—LŚř‚Č�I�v�V�‡�“:" )
pick( MSG_ZDOS_HELP_2,      " " , " " )
pick( MSG_ZDOS_HELP_3,      "form      ::= \"ZDos\" [\"SYS\" | \"HWD\" | \"FSD\"]" ,
                            "form      ::= \"ZDos\" [\"SYS\" | \"HWD\" | \"FSD\"]" )
/*
 *  Raw help screen: max 16 lines (from 0 to 15).
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick( MSG_RAW_HELP_0,       " " , " " )
pick( MSG_RAW_HELP_1,       "commands valid for the RAW executable formats only:" ,
                            "RAW ŽŔŤs‰Â”\Ś`Ž®‚É‘Î‚µ‚Ä‚Ě‚Ý—LŚř‚Č�I�v�V�‡�“:" )
pick( MSG_RAW_HELP_2,       " " , " " )
pick( MSG_RAW_HELP_3,       "form      ::= \"Raw\" (\"BIN\" | \"HEX\")" ,
                            "form      ::= \"Raw\" (\"SYS\" | \"HEX\")" )
pick( MSG_RAW_HELP_4,       "option    ::= \"OFFset=\"n" ,
                            "option    ::= \"OFFset=\"n" )
                                
/*
 *  Zdos help screen: max 16 lines (from 0 to 15).
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick( MSG_RDOS_HELP_0,      " " , " " )
pick( MSG_RDOS_HELP_1,      "commands valid for the RDOS special executable formats only:" ,
                            "RDOS ŽŔŤs‰Â”\Ś`Ž®‚É‘Î‚µ‚Ä‚Ě‚Ý—LŚř‚Č�I�v�V�‡�“:" )
pick( MSG_RDOS_HELP_2,      " " , " " )
pick( MSG_RDOS_HELP_3,      "form      ::= \"RDos\" [\"DEV\" | \"BIN\" | \"MBOOT\"]" ,
                            "form      ::= \"RDos\" [\"DEV\" | \"BIN\" | \"MBOOT\"]" )

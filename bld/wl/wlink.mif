# the linker master make file
#
# This depends on the following projects:
# orl, plusplus, dwarf, watcom, and trmem

proj_name = wlink

!ifeq bootstrap 1
exename     = bwlink
dllname     = bwlinkd
!else
exename     = wl
dllname     = wld
!endif

# Base DLL name needs to be 8 chars or less on OS/2, argh! Additionally,
# internal module name may be required to match file name on some platforms.
!ifeq bootstrap 1
realexename = $(exename)
realdllname = $(dllname)
!else
realexename = wlink
realdllname = wlinkd
!endif

!ifndef wlink_autodepends
wlink_autodepends = .AUTODEPEND
!endif

# get rid of the -zc
suppress_zc = 1

!ifneq bootstrap 1
!include idedlls.mif
!endif
!include cproj.mif
!include defrule.mif
!include deftarg.mif

!include $(orl_dir)/client.mif
!include wres.mif
!include $(dwarf_dir)/dw/client.mif

!include trmem.mif

!include ../wlobjs.mif

!ifdef no_orl
# do not link against ORL
common_objs += orlstubs.obj
orl_lib = 
!endif

common_objs += $(cl_objs)

comp_objs_exe = $(common_objs) $(exe_objs)
comp_objs_dll = $(common_objs) $(dll_objs)

inc_dirs = -I. -I"../h" -I"$(dwarf_dir)/dw/h" -I"$(orl_dir)/h" -I"$(wrc_dir)/h" -I"$(wres_dir)/h" -I"$(lib_misc_dir)/h" -I"$(watcom_dir)/c"

.c: ../c;$(watcom_dir)/c;$(wrc_dir)/c;$(lib_misc_dir)/c;$(trmem_dir)

################
# c flags stuff

extra_cpp_flags =
!ifdef DLLS_IMPLEMENTED
extra_cpp_flags += -DDLLS_IMPLEMENTED
!endif
!ifeq use_virtmem 1
extra_cpp_flags += -DUSE_VIRTMEM
!endif
!ifndef wlink_dll
extra_cpp_flags += -DIDE_PGM
!endif
!ifdef wlink_trmem
extra_cpp_flags += -DTRMEM
!endif

extra_c_flags =
!ifneq bootstrap 1
extra_c_flags += -zp4
!endif

extra_c_flags_idedrv     = -DCHAIN_CALLBACK
extra_c_flags_ideentry   = -DCHAIN_CALLBACK
!ifdef wlink_dll
!ifneq bootstrap 1
extra_c_flags_ideentry   += -bd
!endif
!endif
extra_c_flags_maindrv    = -DDLL_NAME=$(realdllname)
extra_c_flags_rcstr      = -DINSIDE_WLINK
extra_c_flags_exerespe   = -DINSIDE_WLINK
extra_c_flags_stidedrv   = -DSTATIC_LINKAGE
extra_c_flags_trmem      = $(trmem_cflags)
extra_c_flags_mem        = $(trmem_cover_cflags)

#####################
# linker .EXE options

extra_l_flags     = op map, noredefs
extra_l_flags_qnx = op res=wlink.u, st=24k, off=32k

#####################
# linker .DLL options

extra_l_flags_dll     = op map, noredefs
extra_l_flags_dll_nt  = initinstance terminstance op modname='$(realdllname).dll', offset=0x69c00000
extra_l_flags_dll_os2 = initinstance terminstance op modname='$(realdllname)'

xlibs = $(wres_lib) $(dwarf_dw_lib) $(orl_lib)

###########
# rc stuff

# systems where version resources must be added to .DLL
version_res_dll_nt_386 = version.res

# systems where version resources must be added to .EXE
!ifneq bootstrap 1
version_res_exe_nt_386 = exever.res
!endif

#################
# explicit rules

!ifdef wlink_dll

$(exename).exe : $(drv_objs) $(realdllname).lib $(version_res_exe_$(host_os)_$(host_cpu))
    @%write drv.lnk $(lflags)
    @for %i in ($(drv_objs)) do @%append drv.lnk file %i
    @%append drv.lnk lib $(realdllname).lib
    $(linker) name $@ @drv.lnk
    @%make bind_version_res_exe

!else

$(exename).exe : wlink.res $(comp_objs_exe) $(xlibs) $(version_res_exe_$(host_os)_$(host_cpu))
!ifndef __WATCOM__
    $(cl) $(clflags) $(comp_objs_exe) $(xlibs)
!else
    @%write exe.lnk $(lflags)
    @for %i in ($(comp_objs_exe)) do @%append exe.lnk file %i
    @for %i in ($(xlibs)) do @%append exe.lnk lib %i
    $(linker) name $@ @exe.lnk
!endif
    @%make bind_version_res_exe
    $(wstrip) -q -a -r $@ . wlink.res

!endif

$(dllname).dll : wlink.res $(comp_objs_dll) $(xlibs) $(version_res_dll_$(host_os)_$(host_cpu))
    @%write dll.lnk $(lflags_dll)
    @%append dll.lnk op impfile=export.tmp
    @for %i in ($(comp_objs_dll)) do @%append dll.lnk file %i
    @for %i in ($(xlibs)) do @%append dll.lnk lib %i
    $(linker) name $@ @dll.lnk
    @%make bind_version_res_dll
    $(wstrip) -q -a -r $@ . wlink.res

$(realdllname).lib : $(dllname).dll $(__MAKEFILES__)
    $(sed) -e s/$(dllname).dll/$(realdllname).dll/g export.tmp > $(realdllname).lbc
    $(librarian) $(libflags) @$(realdllname).lbc

#################
# auxiliary rules

verrc_exe = $(realexename)
verrc_dll = $(realdllname)
!include verrc.mif

wlink.res : rcmsg.gh ../h/wlink.msg ../h/lnkerror.rc ../h/wlnkmsg.h ../h/lnkerror.msg ../h/wlink.rc
    $(rc_aui) -I"$(wrc_dir)/h" $]@ -fo=$^@

rcmsg.gh : wrcmsg.gh
    $(awk) -v rcbase=800 -f $(build_dir)/msgtoh.awk $[@ > $^@

wrcmsg.gh : $(wrc_dir)/h/rc.msg
    $(c_pp) $(rc_aui_flags) $[@ >$@

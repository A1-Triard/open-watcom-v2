proj_name = wrc

!ifndef wrc_autodepends
wrc_autodepends = .AUTODEPEND
!endif

!ifeq bootstrap 1
exename     = bwrc
dllname     = bwrcd
!else
exename     = wrce
dllname     = wrced
!endif

# Base DLL name needs to be 8 chars or less on OS/2, argh! Additionally,
# internal module name may be required to match file name on some platforms.
!ifeq bootstrap 1
realexename = $(exename)
realdllname = $(dllname)
!else
realexename = wrc
realdllname = wrcd
!endif

additional_cleanup = ytab.* ytab2.* ytabw.c

!include cproj.mif
!include defrule.mif
!include deftarg.mif

#always use the most up to date wres library
!include wres.mif

.EXTENSIONS : .y .key .gh .res .rc

!ifeq release 0
!ifeq host_os nt
!ifneq host_cpu axp
TRACK_MEM_OPTS = -DRCMEM_DEBUG
!else   # axp: -DRCMEM_DEBUG version is NOT working! Fix me!
!endif
!else
TRACK_MEM_OPTS = -DRC_USE_TRMEM -of+
WRC_USE_TRMEM = 1
!endif
!endif

common_objs =  ytabw.obj ytab2.obj keyword.obj keyword2.obj errors.obj  &
        exeobj.obj exeres.obj exeres2.obj exerespe.obj                  &
        exereslx.obj exelxobj.obj exeseg.obj exeutil.obj global.obj     &
        layer0.obj param.obj pass2.obj rc.obj rcio.obj incdirs.obj      &
        rcmem.obj rcstr.obj ppalloc.obj scan.obj scan2.obj semaccel.obj &
        semantic.obj semdiag.obj semmenu.obj semver.obj semtbar.obj     &
        semantc2.obj  sem2diag.obj sem2menu.obj sem2sngl.obj            &
        sem2str.obj sem2accl.obj sem2help.obj                           &
        semraw.obj semsingl.obj semstr.obj dbtable.obj                  &
        preproc.obj ppexpr.obj ppmacro.obj tmpctl.obj autodep.obj       &
        rcldstr.obj rcalloc1.obj rcalloc0.obj sharedio.obj semresfl.obj &
        semutil.obj leadbyte.obj ideentry.obj idemsgpr.obj rcspawn.obj  &
        $(cl_objs)

!ifeq release 0
!ifeq WRC_USE_TRMEM 1
common_objs += trmem.obj
!endif
!endif

objs_drv = maindrv.obj idedrv.obj idemsgfm.obj
objs_dll = $(common_objs)
objs_exe = $(common_objs) $(objs_drv)

!ifeq release 0
splice_opts = -kDEBUG
!endif

parser_defines = -DYYDEBUG -DSCANDEBUG

# global defines
################

rc_defines     = -D_STANDALONE_ $(parser_defines)

# cflags stuff
###############
extra_cpp_flags   = -D_STANDALONE_ $(parser_defines)
!ifeq bootstrap 1
extra_cpp_flags   += -DINCL_MSGTEXT
!endif
!ifndef wrc_dll
extra_cpp_flags   += -DIDE_PGM
!endif

!ifdef wrc_dll
extra_c_flags_ideentry = -bd
!endif
extra_c_flags_rcalloc0 = $(TRACK_MEM_OPTS)
extra_c_flags_rcalloc1 = $(TRACK_MEM_OPTS)
extra_c_flags_rcmem    = $(TRACK_MEM_OPTS)
extra_c_flags_idedrv   = -DSTATIC_LINKAGE
extra_c_flags_maindrv  = -DDLL_NAME=$(realdllname)

# lflags stuff
###############
extra_l_flags = option map, symfile

# DLL lflags stuff
##################
extra_l_flags_dll = option map, symfile

extra_l_flags_dll_nt  += option modname='$(realdllname).dll', offset=0x69800000
extra_l_flags_dll_os2 += option modname='$(realdllname)'

# systems where version resources must be added to .DLL
version_res_dll_nt_386 = version.res
version_res_dll_nt_x64 = version.res

# systems where version resources must be added to .EXE
!ifneq bootstrap 1
version_res_exe_nt_386 = exever.res
version_res_exe_nt_x64 = exever.res
!endif

# where to look for various files
.c : .;../c;$(cpp_dir);$(trmem_dir);$(watcom_dir)/c
.y : ../y
.key : ../hash
.h : ../h;$(trmem_dir)

inc_dirs = -I. -I"../h" -I"$(wres_dir)/h" -I"$(fe_misc_dir)/h" -I"$(cpp_dir)" -I"$(trmem_dir)"

xlibs = $(wres_lib)

!ifeq bootstrap 1
depends_msg = rcmsg.gh incltext.gh
!else
depends_msg = rcmsg.gh wrc.res
!endif
depends_drv = $(objs_drv)
depends_dll = $(depends_msg) $(objs_dll) $(xlibs)
depends_exe = $(depends_msg) $(objs_exe) $(xlibs)

# explicit rules

!ifdef wrc_dll

$(exename).exe : $(depends_drv) $(realdllname).lib $(version_res_exe_$(host_os)_$(host_cpu)) $(__MAKEFILES__)
        @%write drv.lnk $(lflags)
        @for %i in ($(objs_drv)) do @%append drv.lnk file %i
        @%append drv.lnk lib $(realdllname).lib
        $(linker) name $@ @drv.lnk
        @%make bind_version_res_exe

!else

$(exename).exe : $(depends_exe) $(version_res_exe_$(host_os)_$(host_cpu)) $(__MAKEFILES__)
!ifndef __WATCOM__
        $(cl) $(clflags) $(objs_exe) $(xlibs) $(ldflags)
!else
        @%write exe.lnk $(lflags)
        @for %i in ($(objs_exe)) do @%append exe.lnk file %i
        @for %i in ($(xlibs)) do @%append exe.lnk lib %i
!ifeq host_os osi
        $(linker) name $^&.rex @exe.lnk
        $(w32bind) $^&.rex $@ $(os2ldr)
        @rm -f $^&e.rex
!else
        $(linker) name $@ @exe.lnk
!endif
!endif
        @%make bind_version_res_exe
!ifneq bootstrap 1
        $(wstrip) -q -a -r $@ . wrc.res
!endif

!endif

$(dllname).dll : $(depends_dll) $(version_res_dll_$(host_os)_$(host_cpu)) $(__MAKEFILES__)
        @%write dll.lnk $(lflags_dll)
        @%append dll.lnk op impfile=export.tmp
        @for %i in ($(objs_dll)) do @%append dll.lnk file %i
        @for %i in ($(xlibs)) do @%append dll.lnk lib %i
        $(linker) name $@ @dll.lnk
        @%make bind_version_res_dll
!ifneq bootstrap 1
        $(wstrip) -q -a -r $@ . wrc.res
!endif

$(realdllname).lib : $(dllname).dll $(__MAKEFILES__)
        $(sed) -e s/$(dllname).dll/$(realdllname).dll/g export.tmp > $(realdllname).lbc
        $(librarian) $(libflags) @$(realdllname).lbc

# ytab.c is renamed to ytabw.c to avoid filename conflict
ytabw.c ytab.gh : rc.y ../y/yydriver.c rcmem.h
        $(yacc) -d -b $[@ $[:yydriver.c >$(nulldevice)
        @cp ytab.c ytabw.c
        @rm -f ytab.c
        @cp ytab.h ytab.gh
        @rm -f ytab.h

ytab2.c ytab2.gh : rcos2.y ../y/yydrivr2.c rcmem.h
        $(yacc) -d -b $[@ $[:yydrivr2.c >$(nulldevice)
        @cp ytab.c ytab2.c
        @rm -f ytab.c
        @cp ytab.h ytab2.gh
        @rm -f ytab.h

weights.gh keywords.gh : ../hash/rc.key
        findhash -q -m ../hash/rc.key

weights2.gh keyword2.gh : ../hash/rcos2.key
        findhash -q -m ../hash/rcos2.key
        @cp keywords.gh keyword2.gh
        @rm -f keyword.gh
        @cp weights.gh weights2.gh
        @rm -f weights.gh

incltext.gh : ../h/incltext.h ../h/rc.msg
        $(cpp) $(rc_aui_flags) -I.. $(rc_defines) $[@ >$^@

msg.gh : ../h/rc.msg
        $(cpp) $(rc_aui_flags) $(rc_defines) $[@ >$@

rcmsg.gh : msg.gh
        $(awk) -f $(build_dir)/msgtoh.awk $[@ > $^@

wrc.res : ../rc.rc rcmsg.gh .AUTODEPEND
        $(rc_aui) -ad $(rc_defines) -I"../h" $[@ -fo=$^@

keyword.obj : keyword.c keywords.gh weights.gh .AUTODEPEND

keyword2.obj : keyword2.c keyword2.gh weights2.gh .AUTODEPEND

verrc_exe = $(realexename)
verrc_dll = $(realdllname)
!include verrc.mif

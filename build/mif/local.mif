!ifndef bootstrap
!define __WATCOM__
!endif

# global definition which tool is quiet
cl         += -zq
cc         += -zq
cpp        += -zq
linker     += op q
librarian  += -q
as         += -q
rc         += -q
rcaui      += -q

bcl        += -zq
bcc        += -zq
blink      += op q
bas        += -q
blib       += -q

# options used for setup source code Japanese DBCS character set
c_japan_charset = -zk0

# options for preprocessing source code
preproc_opts    = -p

# enable to switch to causeway extender
!ifdef $(proj_name)_causeway
clflags_dos_386 = -l=causeway
lflags_dos_386  = sys causeway
!endif

!ifndef __NTAXP__

!ifeq host_cpu axp
cc_386      += $(bld_incs)
cpp_386     += $(bld_incs)
!endif

!endif

!ifdef __LOADDLL__
!ifndef bootstrap
#!loaddll bwcc    bwccd.dll
#!loaddll bwcc386 bwccd386.dll
#!loaddll bwccaxp bwccdaxp.dll
#!loaddll bwlib   bwlibd.dll
#!loaddll bwlink  bwlinkd.dll
#!loaddll bwpp    bwppdi86.dll
#!loaddll bwpp386 bwppd386.dll
#!loaddll bwppaxp bwppdaxp.dll
!endif
!endif

# bootstrap overrides
######################

!ifdef bootstrap

!ifdef __WATCOM__

!ifdef __LOADDLL__
!loaddll wcc    wccd.dll
!loaddll wcc386 wccd386.dll
!loaddll wccaxp wccdaxp.dll
!loaddll wlib   wlibd.dll
!loaddll wlink  wlinkd.dll
!loaddll wpp    wppdi86.dll
!loaddll wpp386 wppd386.dll
!loaddll wppaxp wppdaxp.dll
!endif

#
# common bootstrap definitions for Linux
#
!else ifdef __LINUX__

cc = gcc
cpp = gcc
cl = $(cc)
bld_incs = $(bld_extra_incs) -I"$(watcom_dir)/h"
bld_cl = gcc $(bld_incs)
bld_cc = gcc $(bld_incs)
bld_link = gcc
librarian = ar
libflags = crs $^@

cppflags_386  = -D_M_IX86 -D__386__
cppflags_ppc  = -D__PPC__
cppflags_mips = -D__MIPS__ -Umips

# options used for setup source code Japanese DBCS character set
c_japan_charset = -finput-charset=CP932

# options for preprocessing source code
preproc_opts  = -x c -E

# $(inc_dirs_lang_$(host_os)) must be defined to override default OW headers
inc_dirs_lang_linux =
inc_dirs_lang_osi =

# Warning flags: all enabled except the ones that have no use besides annoy people
cflags_wng = -Wall -Wno-switch -Wno-missing-braces -Wno-parentheses

cppflags = $(defines) -DNDEBUG -D__UNIX__ -D__SMALL__ -DUNIX -D__FLAT__ -DBOOTSTRAP &
$(cppflags_$(host_cpu)) -funsigned-char -fno-asm -fno-common

#cppflages += -D__LINUX__ -DLINUX

cflags = $(extra_c_flags) $(cppflags) -gdwarf-2 -c $(cflags_wng) -pipe -O -o $@

# options for single source utility compilations
bld_cl_opts = $(cflags_wng) $(cppflags) $(inc_dirs) $(ldflags) -o $@

# options for linking via cc
clflags = -o $@
cl_objs = clibext.obj
.c : $(watcom_dir)/c

#
# common definitions for targeting QNX Neutrino
#
!else ifeq host_os nto

cc = qcc
cpp = qcc
cl = $(cc)
!ifdef __QNX__
bld_incs = $(bld_extra_incs) -I"$(watcom_dir)/h"
bld_cl = $(cc) $(bld_incs)
bld_cc = $(cc) $(bld_incs)
bld_link = $(cc)
!endif
librarian += -fa

cppflags_386  = -D_M_IX86 -D__386__
cppflags_ppc  = -D__PPC__
cppflags_mips = -D__MIPS__ -Umips

# options used for setup source code Japanese DBCS character set
c_japan_charset = -finput-charset=CP932

# options for preprocessing source code
preproc_opts  = -x c -E

# $(inc_dirs_lang_$(host_os)) must be defined to override default OW headers
inc_dirs_lang_nto =
inc_dirs_lang_osi =

# Warning flags: all enabled except the ones that have no use besides annoy people
cflags_wng = -Wall -Wno-switch -Wno-missing-braces -Wno-parentheses

cppflags = $(defines) -DNDEBUG -D__UNIX__ -D__QNX__ -D__SMALL__ -DUNIX -D__FLAT__ &
$(cppflags_$(host_cpu)) -funsigned-char -fno-asm -fno-common
cflags = $(extra_c_flags) $(cppflags) -g -c $(cflags_wng) -pipe -O -o $@

!ifdef __QNX__
# options for single source utility compilations
bld_cl_opts = $(cflags_wng) $(cppflags) $(inc_dirs) $(ldflags) -o $@
!endif

# options for linking via cc
clflags = -o $@
cl_objs = clibext.obj
.c : $(watcom_dir)/c

!endif

!endif
######################
